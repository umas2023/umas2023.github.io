<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-09-09T14:22:17+08:00</updated><id>/feed.xml</id><title type="html">umas’ awesome title</title><subtitle>umas&apos; awesome description for my new site here. It will appear in his document head meta (for Google search results) and in his feed.xml site description.</subtitle><entry><title type="html">windows: 查看wifi密码</title><link href="/windows/wifi_passwd/" rel="alternate" type="text/html" title="windows: 查看wifi密码" /><published>2023-09-09T14:20:16+08:00</published><updated>2023-09-09T14:20:16+08:00</updated><id>/windows/wifi_passwd</id><content type="html" xml:base="/windows/wifi_passwd/"><![CDATA[<p><img src="/image/windows/2023-09-09-wifi_passwd/image_1.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-wifi_passwd/image_2.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-wifi_passwd/image_3.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-wifi_passwd/image_4.png" alt="引入图片" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">windows: 局域网共享文件夹</title><link href="/windows/share_dir/" rel="alternate" type="text/html" title="windows: 局域网共享文件夹" /><published>2023-09-09T14:15:13+08:00</published><updated>2023-09-09T14:15:13+08:00</updated><id>/windows/share_dir</id><content type="html" xml:base="/windows/share_dir/"><![CDATA[<ul>
  <li>设置 =&gt; 网络 =&gt; 网络共享中心 =&gt; 高级共享设置，全部启用</li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_1.png" alt="引入图片" /></p>

<ul>
  <li>控制面板 =&gt; 程序和功能 =&gt; 启用或关闭windows功能 =&gt; smb文件共享</li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_2.png" alt="引入图片" /></p>

<ul>
  <li>关于用户名和密码
    <ul>
      <li>首先在c盘users文件夹确定当前用户名</li>
    </ul>
  </li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_3.png" alt="引入图片" /></p>

<ul>
  <li>使用这个名字添加用户</li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_4.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>手机访问时直接用outlook邮箱账号密码</p>
  </li>
  <li>电脑连接树莓派的smb</li>
  <li>此电脑右键，映射网络驱动器</li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_5.png" alt="引入图片" /></p>

<ul>
  <li>关于如何在树莓派开启smb，好像记在树莓派分区里了</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[设置 =&gt; 网络 =&gt; 网络共享中心 =&gt; 高级共享设置，全部启用]]></summary></entry><entry><title type="html">windows: hyperv虚拟机软路由</title><link href="/windows/hyperv_openwrt/" rel="alternate" type="text/html" title="windows: hyperv虚拟机软路由" /><published>2023-09-09T11:57:03+08:00</published><updated>2023-09-09T11:57:03+08:00</updated><id>/windows/hyperv_openwrt</id><content type="html" xml:base="/windows/hyperv_openwrt/"><![CDATA[<h2 id="下载镜像">下载镜像</h2>

<ul>
  <li>下载openwrt镜像
    <ul>
      <li>https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/</li>
    </ul>
  </li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_1.png" alt="引入图片" /></p>

<ul>
  <li>combined：文件系统 + 内核</li>
  <li>
    <p>rootfs： 只有文件系统</p>
  </li>
  <li>
    <p>注意下载之后的压缩包用7z解压可能报错，可以用winrar</p>
  </li>
  <li>starwind软件将img转为vmdk
    <ul>
      <li>选localfile，VHD/VHDX，VHDX growable image</li>
    </ul>
  </li>
</ul>

<h2 id="启动虚拟机">启动虚拟机</h2>

<ul>
  <li>确认hyperv已经打开</li>
  <li>windows管理工具-&gt;hyper-v管理器</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_2.png" alt="引入图片" /></p>

<ul>
  <li>外部网络选择当前使用的网卡</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_3.png" alt="引入图片" /></p>

<ul>
  <li>创建虚拟机</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_4.png" alt="引入图片" /></p>

<ul>
  <li>第二代，不使用动态内存，连接选刚才的wrt_lan，使用现有虚拟硬盘找到刚才的vhdx</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_5.png" alt="引入图片" /></p>

<ul>
  <li>安全 -&gt; 启用安全启动 - 关掉</li>
  <li>网络适配器 -&gt; 高级功能 -&gt; 启用mac地址欺骗</li>
  <li>检查点 -&gt; 使用自动检查点 - 关掉</li>
  <li>
    <p>自动启动 -&gt; 有需要的话开启始终自动启动</p>
  </li>
  <li>右键连接openwrt，编辑</li>
  <li>Vim etc/config/network</li>
  <li>改成和当前路由器相同网段</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_6.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>reboot</p>
  </li>
  <li>浏览器输入上面的ip：192.168.31.31</li>
  <li>没有密码</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_7.png" alt="引入图片" /></p>

<ul>
  <li>修改lan，网关指向主路由</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_8.png" alt="引入图片" /></p>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_9.png" alt="引入图片" /></p>

<ul>
  <li>DHCP服务器：忽略此接口</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_10.png" alt="引入图片" /></p>

<ul>
  <li>禁用桥接</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_11.png" alt="引入图片" /></p>

<ul>
  <li>Dns 8.8.8.8</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_12.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>ping downloads.openwrt.org</p>
  </li>
  <li>安装中文语言包</li>
  <li>Index of /releases/22.03.5/packages/x86_64/luci/ (openwrt.org)</li>
  <li>搜base-zh-cn</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_13.png" alt="引入图片" /></p>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_14.png" alt="引入图片" /></p>

<ul>
  <li>更换阿里源</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_15.png" alt="引入图片" /></p>

<ul>
  <li>将 /etc/opkg/distfeeds.conf 下的 downloads.openwrt.org 替换为mirrors.aliyun.com/openwrt</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>src/gz openwrt_core https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/packages
src/gz openwrt_base https://downloads.openwrt.org/releases/22.03.5/packages/x86_64/base
src/gz openwrt_luci https://downloads.openwrt.org/releases/22.03.5/packages/x86_64/luci
src/gz openwrt_packages https://downloads.openwrt.org/releases/22.03.5/packages/x86_64/packages
src/gz openwrt_routing https://do
</code></pre></div></div>

<ul>
  <li>
    <p>完了update一下：<code class="language-plaintext highlighter-rouge">opkg update</code></p>
  </li>
  <li>
    <p>注意第一行的targets不要改，会报错（2023.5.28）</p>
  </li>
</ul>

<h2 id="安装clash">安装clash</h2>

<ul>
  <li>
    <p>参考：https://github.com/vernesong/OpenClash/wiki/%E5%AE%89%E8%A3%85</p>
  </li>
  <li>
    <p>首先删掉dnsmasq</p>
  </li>
  <li>下载ipk</li>
  <li>Releases · vernesong/OpenClash (github.com)</li>
  <li>安装依赖</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg update
opkg install coreutils-nohup --force-overwrite
opkg install bash --force-overwrite
opkg install iptables --force-overwrite
opkg install dnsmasq-full --force-overwrite
opkg install curl --force-overwrite
opkg install ca-certificates --force-overwrite
opkg install ipset --force-overwrite
opkg install i
</code></pre></div></div>

<ul>
  <li>整合↑</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg install coreutils-nohup  bash  iptables  dnsmasq-full  curl  ca-certificates  ipset  ip-full  iptables-mod-tproxy  iptables-mod-extra  libcap  libcap-bin  ruby  ruby-yaml  kmod-tun --force-overwrite 

</code></pre></div></div>

<ul>
  <li>ipk文件拷贝到远程主机
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scp .\luci-app-openclash_0.45.121-beta_all.ipk root@192.168.31.31:/root
</code></pre></div>    </div>
  </li>
  <li>opkg install
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg install luci-app-openclash_0.45.121-beta_all.ipk
</code></pre></div>    </div>
  </li>
  <li>报错 module ‘luci.cbi.datatypes’ not found
    <ul>
      <li>参考：https://github.com/vernesong/OpenClash/issues/2364</li>
      <li>参考：https://blog.csdn.net/xs18952904/article/details/124600025</li>
    </ul>
  </li>
  <li>命令报错找不到：opkg install luci-compat，需要手动下载
    <ul>
      <li>https://downloads.openwrt.org/releases/22.03.5/packages/x86_64/luci/</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scp .\luci-compat_git-23.093.42303-ef4cd04_all.ipk root@192.168.31.31:/root
opkg install luci-compat_git-23.093.42303-ef4cd04_all.ipk
</code></pre></div></div>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_16.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>这里没有手动下载内核，如果配置完成后内核自动下载失败，需要手动下载</p>
  </li>
  <li>
    <p>不行，它不能自动下载，还是要手动下</p>
  </li>
  <li>
    <p>下载内核，三个不存在的都下载</p>
    <ul>
      <li>md好麻烦，还是安一个winscp吧</li>
    </ul>
  </li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_17.png" alt="引入图片" /></p>

<ul>
  <li>拷过去之后加权限</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_18.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-hyperv_openwrt/image_19.png" alt="引入图片" /></p>

<ul>
  <li>启用fake-ip模式（在底部点击）记得点保存应用</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_20.png" alt="引入图片" /></p>

<ul>
  <li>启动之后在 server logs 报错</li>
  <li>警告：OpenClash 启动成功，检测到您启用了IPv6的DHCP服务，可能会造成连接异常！</li>
  <li>接口编辑里关掉这个：</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_21.png" alt="引入图片" /></p>

<ul>
  <li>安装主题</li>
  <li><a href="https://github.com/jerrykuku/luci-theme-argon/blob/master/README_ZH.md">luci-theme-argon/README_ZH.md at master · jerrykuku/luci-theme-argon · GitHub</a></li>
  <li>可以用wget
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg install luci-compat
opkg install luci-lib-ipkg
wget --no-check-certificate https://github.com/jerrykuku/luci-theme-argon/releases/download/v2.3/luci-theme-argon_2.3_all.ipk
opkg install luci-theme-argon*.ipk
</code></pre></div>    </div>
  </li>
  <li>报错找不到的话update一下
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg update
</code></pre></div>    </div>
  </li>
  <li>也可以直接下载：</li>
  <li>https://github.com/jerrykuku/</li>
</ul>

<h2 id="windows连接">windows连接</h2>

<ul>
  <li>修改默认网关</li>
  <li>不需要在路由器里固定ip地址</li>
  <li>设置的网卡必须是之前open wrt连接的网卡，双网卡要选对，第三方手机不能连接</li>
  <li>首选dns是wrt地址
注意连接后需要等待2-3分钟，期间会无法联网</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_22.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-hyperv_openwrt/image_23.png" alt="引入图片" /></p>

<ul>
  <li>经测试下面这个方法不太行</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_24.png" alt="引入图片" /></p>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_25.png" alt="引入图片" /></p>

<ul>
  <li>1、网络前缀长度24，对应子网掩码【255.255.255.0】；</li>
  <li>2、网络前缀长度18，对应子网掩码【255.255.240.0】；</li>
  <li>3、网络前缀长度16，对应子网掩码【255.255.0.0】</li>
</ul>

<h2 id="热点转发">热点转发</h2>

<ul>
  <li>实际测试时发现只有电脑本机可以正常上网，安卓苹果switch都不行</li>
  <li>可以将电脑的网络通过热点转发给其他设备</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_26.png" alt="引入图片" /></p>

<ul>
  <li>打开共享后可以看到多出一个网络设备</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_27.png" alt="引入图片" /></p>

<ul>
  <li>在当前电脑连接wifi的设备属性里打开共享，没有开启共享时手机连上会显示没有网络</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_28.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>补充一点，如果手机长时间连接不上的话，把上面的勾去掉试试</p>
  </li>
  <li>
    <p>如果电脑连接后可以正常上网翻墙，但右下角显示无internet，这时无法开启热点，可以尝试：</p>
    <ul>
      <li>更换节点</li>
      <li>或者关闭ipv4校验，关闭后重新启动clash并重新连接，</li>
    </ul>
  </li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_29.png" alt="引入图片" /></p>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_30.png" alt="引入图片" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>

<h2 id="后记">后记</h2>

<ul>
  <li>由于虚拟机性能限制，switch连接后nat无法满足联机需要</li>
  <li>加钱买了个小米路由器，刷机教程详见另一篇</li>
</ul>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[下载镜像]]></summary></entry><entry><title type="html">windows: 删除文件被占用</title><link href="/windows/delete_in_use/" rel="alternate" type="text/html" title="windows: 删除文件被占用" /><published>2023-09-09T11:49:35+08:00</published><updated>2023-09-09T11:49:35+08:00</updated><id>/windows/delete_in_use</id><content type="html" xml:base="/windows/delete_in_use/"><![CDATA[<ul>
  <li>任务管理器 -&gt; 性能 -&gt; 打开资源监视器 -&gt; cpu -&gt; 搜索句柄</li>
</ul>

<p><img src="/image/windows/2023-09-09-delete_in_use/image_1.jpg" alt="引入图片" /></p>

<ul>
  <li>右键结束进程</li>
  <li>亲测可以解决 ERR_ELECTRON_BUILDER_CANNOT_EXECUTE 问题</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[任务管理器 -&gt; 性能 -&gt; 打开资源监视器 -&gt; cpu -&gt; 搜索句柄]]></summary></entry><entry><title type="html">vue: ts环境下导入public目录下的json</title><link href="/vue/import_json/" rel="alternate" type="text/html" title="vue: ts环境下导入public目录下的json" /><published>2023-09-08T19:50:10+08:00</published><updated>2023-09-08T19:50:10+08:00</updated><id>/vue/import_json</id><content type="html" xml:base="/vue/import_json/"><![CDATA[<ul>
  <li>一般在assets或者utils目录下导入json时可以直接用@定义路径，在tsconfig.json中添加<code class="language-plaintext highlighter-rouge">"resolveJsonModule": true,</code>即可</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">assets_json</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@/utils/assets_conf.json</span><span class="dl">"</span>
</code></pre></div></div>

<ul>
  <li>如果json在public路径下，直接导入会报错</li>
  <li>在项目根目录（或者如果已经定义了utils.d.ts的话在utils目录也可以）下新建.d.ts，比如assets_conf.d.ts，写入以下内容</li>
</ul>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">declare</span> <span class="kr">module</span> <span class="dl">"</span><span class="s2">*.json</span><span class="dl">"</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">value</span><span class="p">:</span> <span class="kr">any</span><span class="p">;</span>
    <span class="k">export</span> <span class="k">default</span> <span class="nx">value</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>这时再导入就不会报错了</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">assets_json</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">/public/config/assets_conf.json</span><span class="dl">"</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="vue" /><summary type="html"><![CDATA[一般在assets或者utils目录下导入json时可以直接用@定义路径，在tsconfig.json中添加"resolveJsonModule": true,即可]]></summary></entry><entry><title type="html">termux: hello world</title><link href="/linux/termux-hello/" rel="alternate" type="text/html" title="termux: hello world" /><published>2023-09-08T10:16:49+08:00</published><updated>2023-09-08T10:16:49+08:00</updated><id>/linux/termux-hello</id><content type="html" xml:base="/linux/termux-hello/"><![CDATA[<h2 id="基本命令">基本命令</h2>

<ul>
  <li>termux-change-repo
    <ul>
      <li>换源，空格键选中</li>
    </ul>
  </li>
  <li>termux-setup-storage
    <ul>
      <li>创建storage文件夹，直接访问手机文件</li>
    </ul>
  </li>
  <li>pkg install vim
    <ul>
      <li>有时候apt可能不好用，改为pkg</li>
    </ul>
  </li>
  <li>ssh远程
    <ul>
      <li>实测termux里面的ubuntu的ssh服务启不起来，只能先ssh进termux再进ubuntu</li>
      <li>更新：termux和ubuntu共用8022端口，不能同时开ssh，把termux的ssh关了就可以开ubuntu的ssh了</li>
      <li>pkg install openssh</li>
      <li>看我是谁：whoami</li>
      <li>设置密码：passwd</li>
      <li>启动服务：sshd</li>
      <li>电脑连接端口是8022：ssh u0_a153@192.168.1.109 -p 8022</li>
      <li>mate10用户名u0_a243</li>
      <li>nova9用户名u0_a282</li>
      <li>matepad用户名u0_a153</li>
      <li>记得把vpn都退了不然一直timeout，md查了好久居然是因为这个</li>
    </ul>
  </li>
  <li>termux调用摄像头，参考：https://zhuanlan.zhihu.com/p/381044910</li>
</ul>

<h2 id="安装ubuntu">安装ubuntu</h2>

<ul>
  <li>安装ubuntu
    <ul>
      <li>安装工具：pkg install proot-distro</li>
      <li>记得先pkg update一下</li>
      <li>查看可安装版本：proot-distro list</li>
      <li>安装：proot-distro install ubuntu</li>
      <li>登录：proot-distro login ubuntu</li>
      <li>文件：termux启用storage之后，Ubuntu中 /sdcard 目录即为手机存储</li>
    </ul>
  </li>
  <li>termux设置默认进入ubuntu：
    <ul>
      <li>新建.profile</li>
      <li>加入登录命令</li>
    </ul>
  </li>
  <li>
    <p>手机文件在/sdcard目录下</p>
  </li>
  <li>安装code－server
    <ul>
      <li>
        <table>
          <tbody>
            <tr>
              <td>curl -fsSL https://code-server.dev/install.sh</td>
              <td>sh</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li>挂梯子↑</li>
      <li>code-server</li>
      <li>cat .config/code-server/config.yaml</li>
      <li>把密码记住</li>
      <li>fe2bee81b0fa36545baec7ad</li>
      <li>浏览器访问127.0.0.1:8080</li>
      <li>输完密码黑屏/白屏换个浏览器，安卓edge可行chrome不行</li>
      <li>密码替换：sed -i “/^passwd=*/cpasswd=666” config.yaml</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[基本命令]]></summary></entry><entry><title type="html">raspberry_pi: 树莓派ssh</title><link href="/raspberry_pi/ssh/vscode/windows/ssh/" rel="alternate" type="text/html" title="raspberry_pi: 树莓派ssh" /><published>2023-09-08T09:33:00+08:00</published><updated>2023-09-08T09:33:00+08:00</updated><id>/raspberry_pi/ssh/vscode/windows/ssh</id><content type="html" xml:base="/raspberry_pi/ssh/vscode/windows/ssh/"><![CDATA[<h2 id="windows平台vscode添加ssh公钥">windows平台vscode添加ssh公钥</h2>
<ul>
  <li>windows平台下运行：
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen -t rsa -b 4096 
</code></pre></div>    </div>
  </li>
  <li>Linux服务器拷贝内容
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:\Users\umas2017\.ssh\id_rsa.pub 
</code></pre></div>    </div>
    <p>到</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ~/.ssh/authorized_keys
</code></pre></div>    </div>
  </li>
  <li>服务器重启ssh
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>service ssh restart
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="连接错误的解决方法">连接错误的解决方法</h2>

<ul>
  <li>
    <p>大部分情况下首先排查对应端口是否变化，删除c盘user下.ssh/known_hosts</p>
  </li>
  <li>
    <p>卡在download vscode server的情况可以试试手动下载这个包</p>
  </li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> ~/.vscode-server/bin
tree
<span class="c"># 返回一串id，比如我的是57fd6d0195bb9b9d1b49f6da5db789060795de47</span>
<span class="c"># 手动下载这个包：https://update.code.visualstudio.com/commit:57fd6d0195bb9b9d1b49f6da5db789060795de47/server-linux-x64/stable</span>

wget https://vscode.cdn.azure.cn/stable/57fd6d0195bb9b9d1b49f6da5db789060795de47/vscode-server-linux-x64.tar.gz

<span class="c"># 拷贝到id的目录下解压</span>
<span class="nb">tar</span> <span class="nt">-xvzf</span> vscode-server-linux-x64.tar.gz <span class="nt">--strip-components</span> 1


</code></pre></div></div>]]></content><author><name></name></author><category term="raspberry_pi" /><category term="ssh" /><category term="vscode" /><category term="windows" /><summary type="html"><![CDATA[windows平台vscode添加ssh公钥 windows平台下运行： ssh-keygen -t rsa -b 4096 Linux服务器拷贝内容 C:\Users\umas2017\.ssh\id_rsa.pub 到 ~/.ssh/authorized_keys]]></summary></entry><entry><title type="html">raspberry_pi: 树莓派命令行联网</title><link href="/raspberry_pi/linux/server_net/" rel="alternate" type="text/html" title="raspberry_pi: 树莓派命令行联网" /><published>2023-09-08T09:33:00+08:00</published><updated>2023-09-08T09:33:00+08:00</updated><id>/raspberry_pi/linux/server_net</id><content type="html" xml:base="/raspberry_pi/linux/server_net/"><![CDATA[<ul>
  <li>参考
    <ul>
      <li>https://ubuntu.com/tutorials/how-to-install-ubuntu-on-your-raspberry-pi#4-boot-ubuntu-server</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="raspberry_pi" /><category term="linux" /><summary type="html"><![CDATA[参考 https://ubuntu.com/tutorials/how-to-install-ubuntu-on-your-raspberry-pi#4-boot-ubuntu-server]]></summary></entry><entry><title type="html">markdown: 进阶命令</title><link href="/markdown/cmd/" rel="alternate" type="text/html" title="markdown: 进阶命令" /><published>2023-09-08T09:00:00+08:00</published><updated>2023-09-08T09:00:00+08:00</updated><id>/markdown/cmd</id><content type="html" xml:base="/markdown/cmd/"><![CDATA[<h2 id="vscode中自动生成目录">vscode中自动生成目录</h2>
<ul>
  <li>光标放在插入目录的位置</li>
  <li>快捷键<code class="language-plaintext highlighter-rouge">ctrl+shift+p</code></li>
  <li>输入 Markdown: Create Table of Contents 并选择该命令</li>
</ul>]]></content><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[vscode中自动生成目录 光标放在插入目录的位置 快捷键ctrl+shift+p 输入 Markdown: Create Table of Contents 并选择该命令]]></summary></entry><entry><title type="html">python: 使用python驱动声卡播放音频(ubuntu)</title><link href="/python/nio_voice_play/" rel="alternate" type="text/html" title="python: 使用python驱动声卡播放音频(ubuntu)" /><published>2023-09-06T14:16:58+08:00</published><updated>2023-09-06T14:16:58+08:00</updated><id>/python/nio_voice_play</id><content type="html" xml:base="/python/nio_voice_play/"><![CDATA[<h2 id="ubuntu命令行播放音频">ubuntu命令行播放音频</h2>

<ul>
  <li>aplay命令
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>alsa-utils
</code></pre></div>    </div>
  </li>
  <li>查看声卡设备
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> /proc/asound/cards
</code></pre></div>    </div>
  </li>
  <li>指定声卡播放
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aplay <span class="nt">-D</span> default Hinomi_Chinese_lijun.wav
aplay <span class="nt">-D</span> plughw:2 Hinomi_Chinese_lijun.wav
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="excel转json">excel转json</h2>
<ul>
  <li>由于拿到的目录是excel格式不方便程序操作，先转为json</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="sh">'''</span><span class="s">原程序找不到了，目录下面只有这个↓</span><span class="sh">'''</span>

<span class="kn">import</span> <span class="n">openpyxl</span> <span class="c1"># pip install openpyxl
</span>
<span class="k">def</span> <span class="nf">load_each_sheet</span><span class="p">():</span>
    <span class="n">wb</span> <span class="o">=</span> <span class="n">openpyxl</span><span class="p">.</span><span class="nf">load_workbook</span><span class="p">(</span><span class="n">filePath</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">sheet</span> <span class="ow">in</span> <span class="n">wb</span><span class="p">.</span><span class="n">worksheets</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">sheet</span><span class="p">.</span><span class="n">title</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">exceptSheets</span><span class="p">:</span>
            <span class="k">yield</span> <span class="n">wb</span><span class="p">,</span> <span class="n">sheet</span>
    <span class="n">fileNameOut</span> <span class="o">=</span> <span class="n">fileName</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">.xlsx</span><span class="sh">"</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="sh">"</span><span class="s">-out.xlsx</span><span class="sh">"</span>
    <span class="n">wb</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">fileDir</span><span class="p">,</span> <span class="n">fileNameOut</span><span class="p">))</span>

</code></pre></div></div>

<h2 id="py播放音频">py播放音频</h2>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">json</span>
<span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">wave</span> <span class="c1"># pip install wave
</span><span class="kn">import</span> <span class="n">time</span>
<span class="kn">import</span> <span class="n">threading</span>


<span class="k">class</span> <span class="nc">SayHello</span><span class="p">:</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span>
                 <span class="n">package_path</span><span class="o">=</span><span class="sh">'</span><span class="s">/home/nuc/test_voice_play/nio-voice</span><span class="sh">'</span><span class="p">,</span>
                 <span class="n">default_sleep_time</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span>
                 <span class="n">default_sound_volume</span><span class="o">=</span><span class="mi">80</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">package_path</span> <span class="o">=</span> <span class="n">package_path</span>
        <span class="n">self</span><span class="p">.</span><span class="n">default_sleep_time</span> <span class="o">=</span> <span class="n">default_sleep_time</span>
        <span class="n">self</span><span class="p">.</span><span class="n">default_sound_volume</span> <span class="o">=</span> <span class="n">default_sound_volume</span>

    <span class="c1"># Get audio file duration
</span>    <span class="k">def</span> <span class="nf">get_duration</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">path</span><span class="p">:</span> <span class="nb">str</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">float</span><span class="p">:</span>
        <span class="n">wavfile</span> <span class="o">=</span> <span class="n">wave</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="sh">'</span><span class="s">rb</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">params</span> <span class="o">=</span> <span class="n">wavfile</span><span class="p">.</span><span class="nf">getparams</span><span class="p">()</span>
        <span class="n">framesra</span><span class="p">,</span> <span class="n">frameswav</span> <span class="o">=</span> <span class="n">params</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">params</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
        <span class="n">time</span> <span class="o">=</span> <span class="mf">1.0</span> <span class="o">/</span> <span class="n">framesra</span> <span class="o">*</span> <span class="n">frameswav</span>
        <span class="k">return</span> <span class="n">time</span>

    <span class="c1"># Modify playback volume
</span>    <span class="k">def</span> <span class="nf">set_volume</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">volume</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">card</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="bp">None</span><span class="p">:</span>
        <span class="sh">'''</span><span class="s">
        Modify playback volume  </span><span class="se">\n</span><span class="s">
        volume : 0~100  </span><span class="se">\n</span><span class="s">
        card : default = 0 </span><span class="se">\n</span><span class="s">
        </span><span class="sh">'''</span>
        <span class="k">if</span> <span class="n">volume</span> <span class="o">&gt;</span> <span class="mi">100</span> <span class="ow">or</span> <span class="n">volume</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Ranges : 0 &lt; volume &lt; 100</span><span class="sh">"</span><span class="p">)</span>
            <span class="k">return</span>
        <span class="n">self</span><span class="p">.</span><span class="n">default_sound_volume</span> <span class="o">=</span> <span class="n">volume</span>
        <span class="n">volume_percent</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">volume</span><span class="p">)</span> <span class="o">+</span> <span class="sh">"</span><span class="s">%</span><span class="sh">"</span>
        <span class="n">os</span><span class="p">.</span><span class="nf">system</span><span class="p">(</span><span class="sh">'</span><span class="s">amixer set -c %s Master %s 1&gt;/dev/null 2&gt;&amp;1</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="n">card</span><span class="p">),</span> <span class="n">volume_percent</span><span class="p">))</span>

    <span class="c1"># play one audio file
</span>    <span class="k">def</span> <span class="nf">play_one</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">cmdstr</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">card</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">volume</span><span class="o">=</span><span class="mi">80</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
        <span class="sh">'''</span><span class="s">
        play one single .wav file, return wav file path and content  </span><span class="se">\n</span><span class="s">
        cmdstr : eg:</span><span class="sh">"</span><span class="s">Basic/wakeup/adult_male_nature</span><span class="sh">"</span><span class="s">  </span><span class="se">\n</span><span class="s">
        card : default = 0  </span><span class="se">\n</span><span class="s">
        volume : default = 80
        </span><span class="sh">'''</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">self</span><span class="p">.</span><span class="nf">set_volume</span><span class="p">(</span><span class="n">volume</span><span class="o">=</span><span class="n">volume</span><span class="p">,</span> <span class="n">card</span><span class="o">=</span><span class="n">card</span><span class="p">)</span>
        <span class="k">except</span> <span class="nb">BaseException</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">volume set error</span><span class="sh">"</span><span class="p">)</span>
            <span class="k">return</span>

        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">package_path</span><span class="p">,</span> <span class="sh">"</span><span class="s">Voiceconfig.json</span><span class="sh">"</span><span class="p">),</span> <span class="sh">'</span><span class="s">r</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">load_f</span><span class="p">:</span>
            <span class="n">config</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="n">load_f</span><span class="p">)</span>
            <span class="n">cmdlist</span> <span class="o">=</span> <span class="n">cmdstr</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">/</span><span class="sh">"</span><span class="p">)</span>
            <span class="n">wav_path</span> <span class="o">=</span> <span class="sh">""</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">wav_path</span> <span class="o">=</span> <span class="n">config</span><span class="p">[</span><span class="n">cmdlist</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="n">cmdlist</span><span class="p">[</span><span class="mi">1</span><span class="p">]][</span><span class="n">cmdlist</span><span class="p">[</span><span class="mi">2</span><span class="p">]][</span><span class="sh">"</span><span class="s">file</span><span class="sh">"</span><span class="p">]</span>
                <span class="n">wav_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">package_path</span><span class="p">,</span> <span class="n">wav_path</span><span class="p">)</span>
                <span class="n">content</span> <span class="o">=</span> <span class="n">config</span><span class="p">[</span><span class="n">cmdlist</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="n">cmdlist</span><span class="p">[</span><span class="mi">1</span><span class="p">]][</span><span class="n">cmdlist</span><span class="p">[</span><span class="mi">2</span><span class="p">]][</span><span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">]</span>
                <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">content : %s</span><span class="sh">"</span> <span class="o">%</span> <span class="n">content</span><span class="p">)</span>
                <span class="n">os</span><span class="p">.</span><span class="nf">system</span><span class="p">(</span><span class="sh">'</span><span class="s">aplay -D plughw:%s %s 1&gt;/dev/null 2&gt;&amp;1</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="n">card</span><span class="p">),</span> <span class="n">wav_path</span><span class="p">))</span>
                <span class="k">return</span> <span class="n">wav_path</span>
            <span class="k">except</span> <span class="nb">BaseException</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">command input illegal</span><span class="sh">"</span><span class="p">)</span>
                <span class="k">return</span>

    <span class="c1"># play multi audio file by step in a list
</span>    <span class="k">def</span> <span class="nf">play_step</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">cmdlist</span><span class="p">:</span> <span class="p">[{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="nb">int</span><span class="p">}],</span> <span class="n">card</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">volume</span><span class="o">=</span><span class="mi">80</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="bp">None</span><span class="p">:</span>
        <span class="sh">'''</span><span class="s">
        play multi .wav file sequentially at once  </span><span class="se">\n</span><span class="s">
        sleep: default = 3
        card : default = 0  </span><span class="se">\n</span><span class="s">
        volume : default = 80
        </span><span class="sh">'''</span>
        <span class="k">for</span> <span class="n">each_cmd</span> <span class="ow">in</span> <span class="n">cmdlist</span><span class="p">:</span>

            <span class="n">sleep_time</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">default_sleep_time</span>
            <span class="k">if</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">each_cmd</span><span class="p">:</span>
                <span class="n">sleep_time</span> <span class="o">=</span> <span class="n">each_cmd</span><span class="p">[</span><span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">]</span>

            <span class="k">try</span><span class="p">:</span>
                <span class="n">wav_path</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="nf">play_one</span><span class="p">(</span><span class="n">cmdstr</span><span class="o">=</span><span class="n">each_cmd</span><span class="p">[</span><span class="sh">'</span><span class="s">cmd</span><span class="sh">'</span><span class="p">],</span> <span class="n">card</span><span class="o">=</span><span class="n">card</span><span class="p">,</span> <span class="n">volume</span><span class="o">=</span><span class="n">volume</span><span class="p">)</span>
                <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">sleep : %fs</span><span class="sh">"</span> <span class="o">%</span> <span class="n">sleep_time</span><span class="p">)</span>
                <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="nf">get_duration</span><span class="p">(</span><span class="n">wav_path</span><span class="p">)</span> <span class="o">+</span> <span class="n">sleep_time</span><span class="p">)</span>
            <span class="k">except</span> <span class="nb">BaseException</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">command input illegal</span><span class="sh">"</span><span class="p">)</span>
                <span class="k">return</span>

    <span class="c1"># Drive multiple sound cards at the same time
</span>    <span class="k">def</span> <span class="nf">play_parallel</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">playlist</span><span class="p">:</span> <span class="p">[{</span><span class="sh">"</span><span class="s">card</span><span class="sh">"</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="sh">"</span><span class="s">step</span><span class="sh">"</span><span class="p">:</span> <span class="nb">list</span><span class="p">,</span> <span class="sh">"</span><span class="s">volume</span><span class="sh">"</span><span class="p">:</span> <span class="nb">int</span><span class="p">}])</span> <span class="o">-&gt;</span> <span class="bp">None</span><span class="p">:</span>
        <span class="sh">'''</span><span class="s">
        Drive multiple sound cards at the same time </span><span class="se">\n</span><span class="s">
        card : sound card number  </span><span class="se">\n</span><span class="s">
        step : eg. [{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="s">: </span><span class="sh">"</span><span class="s">Basic/wakeup/adult_male_nature</span><span class="sh">"</span><span class="s">, </span><span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="s">: 2}]
        volume : default = 80
        </span><span class="sh">'''</span>
        <span class="n">thread_list</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">playlist</span><span class="p">))]</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">playlist</span><span class="p">)):</span>
            <span class="n">card</span> <span class="o">=</span> <span class="n">playlist</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="sh">"</span><span class="s">card</span><span class="sh">"</span><span class="p">]</span>
            <span class="n">step</span> <span class="o">=</span> <span class="n">playlist</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="sh">"</span><span class="s">step</span><span class="sh">"</span><span class="p">]</span>
            <span class="n">volume</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">default_sound_volume</span>
            <span class="k">if</span> <span class="sh">"</span><span class="s">volume</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">playlist</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
                <span class="n">volume</span> <span class="o">=</span> <span class="n">playlist</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="sh">"</span><span class="s">volume</span><span class="sh">"</span><span class="p">]</span>
            <span class="n">thread_list</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">threading</span><span class="p">.</span><span class="nc">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">self</span><span class="p">.</span><span class="n">play_step</span><span class="p">,</span> <span class="n">args</span><span class="o">=</span><span class="p">(</span><span class="n">step</span><span class="p">,</span> <span class="n">card</span><span class="p">))</span>

        <span class="k">try</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">each_thread</span> <span class="ow">in</span> <span class="n">thread_list</span><span class="p">:</span>
                <span class="n">each_thread</span><span class="p">.</span><span class="nf">start</span><span class="p">()</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">thread error : </span><span class="sh">"</span> <span class="o">+</span> <span class="n">e</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="功能">功能</h2>

<ol>
  <li>单条指令播放</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">.</span><span class="nf">play_one</span><span class="p">(</span><span class="sh">"</span><span class="s">Basic/wakeup/adult_male_nature</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<ol>
  <li>多条指令连续播放
参数card, volume, sleep有预设值</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">.</span><span class="nf">play_step</span><span class="p">(</span>
    <span class="n">card</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
    <span class="n">volume</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span>
    <span class="n">cmdlist</span><span class="o">=</span><span class="p">[</span>
        <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Basic/wakeup/adult_male_nature</span><span class="sh">"</span><span class="p">},</span>
        <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Control/open_window/adult_male_nature</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="mi">3</span><span class="p">},</span>
        <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Control/close_window/adult_male_nature</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="mi">0</span><span class="p">}</span>
    <span class="p">])</span>
</code></pre></div></div>

<ol>
  <li>多声卡并行播放
参数sleep, volumn有预设值</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">play_0</span> <span class="o">=</span> <span class="p">[</span>
    <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Basic/wakeup/adult_male_nature</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="mi">2</span><span class="p">},</span>
    <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Control/open_window/adult_male_nature</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="mi">3</span><span class="p">},</span>
    <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Control/close_window/adult_male_nature</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="mi">0</span><span class="p">}</span>
<span class="p">]</span>

<span class="n">play_1</span> <span class="o">=</span> <span class="p">[</span>
    <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Basic/wakeup/adult_male_nature</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="mi">2</span><span class="p">},</span>
    <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Control/open_window/adult_male_nature</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="mi">3</span><span class="p">},</span>
    <span class="p">{</span><span class="sh">"</span><span class="s">cmd</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Control/close_window/adult_male_nature</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sleep</span><span class="sh">"</span><span class="p">:</span> <span class="mi">0</span><span class="p">}</span>
<span class="p">]</span>

<span class="n">a</span><span class="p">.</span><span class="nf">play_parallel</span><span class="p">([</span>
    <span class="p">{</span><span class="sh">"</span><span class="s">card</span><span class="sh">"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="sh">"</span><span class="s">step</span><span class="sh">"</span><span class="p">:</span> <span class="n">play_0</span><span class="p">,</span> <span class="sh">"</span><span class="s">volume</span><span class="sh">"</span><span class="p">:</span> <span class="mi">60</span><span class="p">},</span>
    <span class="p">{</span><span class="sh">"</span><span class="s">card</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="sh">"</span><span class="s">step</span><span class="sh">"</span><span class="p">:</span> <span class="n">play_1</span><span class="p">}</span>
<span class="p">])</span>
</code></pre></div></div>

<!-- ![引入图片](/image/python/2023-09-06-nio_voice_play/image_1.jpg) -->

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="python" /><summary type="html"><![CDATA[ubuntu命令行播放音频]]></summary></entry></feed>