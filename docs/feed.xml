<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-07-04T15:07:42+08:00</updated><id>/feed.xml</id><title type="html">umas’ awesome title</title><subtitle>umas&apos; awesome description for my new site here. It will appear in my document head meta (for Google search results) and in my feed.xml site description.</subtitle><entry><title type="html">python: pytesseract 配置</title><link href="/python/zip_pctools/pytesseract/" rel="alternate" type="text/html" title="python: pytesseract 配置" /><published>2023-07-04T11:25:22+08:00</published><updated>2023-07-04T11:25:22+08:00</updated><id>/python/zip_pctools/pytesseract</id><content type="html" xml:base="/python/zip_pctools/pytesseract/"><![CDATA[<h2 id="安装tesseract">安装tesseract</h2>
<ul>
  <li>https://github.com/tesseract-ocr/tesseract</li>
</ul>

<h2 id="加入环境变量">加入环境变量</h2>

<p><img src="/image/python/2023-07-04-pytesseract/image_1.jpg" alt="引入图片" /></p>

<h2 id="直接添加路径">直接添加路径</h2>
<ul>
  <li>实际使用发现添加环境变量不一定好用，依然会报错tesseract not installed</li>
  <li>这时候需要手动在pytesseract.py里添加tesseract安装路径</li>
  <li>我的包安装位置：</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>d:/p-program/pctools_venv/venv/Lib/site-packages/pytesseract/pytesseract.py
</code></pre></div></div>

<ul>
  <li>打开pytesseract.py，搜索tesseract_cmd，替换为tesseract安装路径</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'
</code></pre></div></div>

<h2 id="下面是写在电脑配件里的实例">下面是写在电脑配件里的实例</h2>

<ul>
  <li>截图函数</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">startShot</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
    <span class="sh">'''</span><span class="s">开始截图</span><span class="sh">'''</span>
    <span class="c1"># 获取屏幕截图
</span>    <span class="n">screenshot</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">pyautogui</span><span class="p">.</span><span class="nf">screenshot</span><span class="p">())</span>
    <span class="c1"># 将RGB模式的屏幕截图转换为BGR模式
</span>    <span class="n">screenshot</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="nf">cvtColor</span><span class="p">(</span><span class="n">screenshot</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_RGB2BGR</span><span class="p">)</span>

    <span class="c1"># 创建全屏窗口
</span>    <span class="n">cv2</span><span class="p">.</span><span class="nf">namedWindow</span><span class="p">(</span><span class="sh">"</span><span class="s">Screenshot</span><span class="sh">"</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">WINDOW_NORMAL</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="nf">setWindowProperty</span><span class="p">(</span><span class="sh">"</span><span class="s">Screenshot</span><span class="sh">"</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">WND_PROP_FULLSCREEN</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">WINDOW_FULLSCREEN</span><span class="p">)</span>

    <span class="c1"># 显示屏幕截图
</span>    <span class="n">cv2</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="sh">"</span><span class="s">Screenshot</span><span class="sh">"</span><span class="p">,</span> <span class="n">screenshot</span><span class="p">)</span>

    <span class="c1"># 等待用户选择区域
</span>    <span class="n">region</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="nf">selectROI</span><span class="p">(</span><span class="sh">"</span><span class="s">Screenshot</span><span class="sh">"</span><span class="p">,</span> <span class="n">screenshot</span><span class="p">,</span> <span class="n">fromCenter</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">showCrosshair</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="nf">destroyAllWindows</span><span class="p">()</span>

    <span class="c1"># 获取用户选择的区域
</span>    <span class="n">left</span><span class="p">,</span> <span class="n">top</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span> <span class="o">=</span> <span class="n">region</span>

    <span class="c1"># 截取用户选择的区域
</span>    <span class="n">screenshot</span> <span class="o">=</span> <span class="n">screenshot</span><span class="p">[</span><span class="n">top</span><span class="p">:</span><span class="n">top</span> <span class="o">+</span> <span class="n">height</span><span class="p">,</span> <span class="n">left</span><span class="p">:</span><span class="n">left</span> <span class="o">+</span> <span class="n">width</span><span class="p">]</span>

    <span class="c1"># 保存截图
</span>    <span class="n">cv2</span><span class="p">.</span><span class="nf">imwrite</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">jpg_path</span><span class="p">,</span> <span class="n">screenshot</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>ocr函数</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pytesseract</span>  <span class="c1"># pip install pytesseract # 需要配置pytesseract路径
</span>
<span class="k">def</span> <span class="nf">get_text</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">jpg_path</span><span class="p">,</span><span class="n">target</span><span class="p">)</span><span class="o">-&gt;</span><span class="nb">str</span><span class="p">:</span>
    <span class="sh">'''</span><span class="s">识别图片中的文字,返回去除空格和换行符的字符串</span><span class="sh">'''</span>
    <span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="n">jpg_path</span><span class="p">)</span>
    <span class="n">text</span> <span class="o">=</span> <span class="n">pytesseract</span><span class="p">.</span><span class="nf">image_to_string</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="n">target</span><span class="p">)</span>
    <span class="n">text</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">text</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">"</span><span class="s"> </span><span class="sh">"</span><span class="p">,</span> <span class="sh">""</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">"</span><span class="se">\n</span><span class="sh">"</span><span class="p">,</span> <span class="sh">""</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">text</span>
</code></pre></div></div>

<ul>
  <li>谷歌翻译函数</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">deep_translator</span> <span class="kn">import</span> <span class="n">GoogleTranslator</span>  <span class="c1"># pip install deep-translator
</span>
<span class="k">def</span> <span class="nf">get_translate</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">text</span><span class="p">,</span><span class="n">source</span><span class="p">,</span><span class="n">translate</span><span class="p">)</span><span class="o">-&gt;</span><span class="nb">str</span><span class="p">:</span>
    <span class="sh">'''</span><span class="s">调用谷歌接口翻译文本</span><span class="se">\n</span><span class="s">
    source = [</span><span class="sh">'</span><span class="s">ja</span><span class="sh">'</span><span class="s">]</span><span class="se">\n</span><span class="s">
    translate = [</span><span class="sh">'</span><span class="s">zh-CN</span><span class="sh">'</span><span class="s">]</span><span class="sh">'''</span>
    <span class="n">translated</span> <span class="o">=</span> <span class="nc">GoogleTranslator</span><span class="p">(</span><span class="n">source</span><span class="o">=</span><span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="o">=</span><span class="n">translate</span><span class="p">).</span><span class="nf">translate</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">)</span>  <span class="c1"># Chinese translation
</span>    <span class="k">return</span> <span class="n">translated</span>
</code></pre></div></div>

<ul>
  <li>日文注音函数</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pykakasi</span>  <span class="c1"># pip install Cython # pip install pykakasi
</span>
<span class="k">def</span> <span class="nf">get_romaji</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">text_jp</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
    <span class="sh">'''</span><span class="s">将输入的日文转换为罗马音输出</span><span class="sh">'''</span>
    <span class="n">text</span> <span class="o">=</span> <span class="n">text_jp</span>
    <span class="n">kks</span> <span class="o">=</span> <span class="n">pykakasi</span><span class="p">.</span><span class="nf">kakasi</span><span class="p">()</span>
    <span class="n">result</span> <span class="o">=</span> <span class="n">kks</span><span class="p">.</span><span class="nf">convert</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="n">sentence</span> <span class="o">=</span> <span class="sh">""</span>
    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
        <span class="n">word</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="sh">'</span><span class="s">orig</span><span class="sh">'</span><span class="p">]</span><span class="o">+</span><span class="sh">"</span><span class="s">(%s)</span><span class="sh">"</span><span class="o">%</span><span class="n">item</span><span class="p">[</span><span class="sh">'</span><span class="s">hira</span><span class="sh">'</span><span class="p">]</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">item</span><span class="p">[</span><span class="sh">'</span><span class="s">orig</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span>  <span class="n">item</span><span class="p">[</span><span class="sh">'</span><span class="s">hira</span><span class="sh">'</span><span class="p">]</span> <span class="k">else</span> <span class="n">item</span><span class="p">[</span><span class="sh">'</span><span class="s">orig</span><span class="sh">'</span><span class="p">]</span>
        <span class="n">sentence</span><span class="o">+=</span><span class="n">word</span>
    <span class="k">return</span> <span class="n">sentence</span>

</code></pre></div></div>]]></content><author><name></name></author><category term="python" /><category term="zip_pctools" /><summary type="html"><![CDATA[安装tesseract https://github.com/tesseract-ocr/tesseract]]></summary></entry><entry><title type="html">knowhow: ip地址基础知识</title><link href="/knowhow/ip/" rel="alternate" type="text/html" title="knowhow: ip地址基础知识" /><published>2023-07-01T12:41:49+08:00</published><updated>2023-07-01T12:41:49+08:00</updated><id>/knowhow/ip</id><content type="html" xml:base="/knowhow/ip/"><![CDATA[<h2 id="什么是ip地址">什么是ip地址</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://blog.csdn.net/hzhsan/article/details/44100215
</code></pre></div></div>

<ul>
  <li>xx.xx.xx.0/24 表示一个网段，并且24告诉了当前具体的子网掩码</li>
  <li>斜杠后面的数字就表示子网掩码，数字具体代表32位子网掩码（二进制形式）中前面的“1”的个数</li>
  <li>192.168.0.0/24”表示，这个网段的IP地址从192.168.0.1开始，到192.168.0.254结束，子网掩码是255.255.255.0</li>
  <li>IP地址是四个十进制数组成的，相当于32位二进制，子网掩码24表示32位中的前24位用”1”表示，后面8位用0表示，即11111111 11111111 11111111 00000000。将其转化为十进制，就是：255.255.255.0</li>
  <li>同理192.168.1.0/28表示的意思是网段是192.168.1.0，子网掩码为：255.255.255.240，虽然子网掩码不同，但网段与24相同</li>
  <li>24位说明网络位是24位，那么主机位就是32-24=8位了，则子网的IP个数是254个，即是从00000001到11111110，而28位说明网络位是28位，那么主机位4位，则子网的IP个数是14个，即是从00000001到00001110</li>
</ul>]]></content><author><name></name></author><category term="knowhow" /><summary type="html"><![CDATA[什么是ip地址]]></summary></entry><entry><title type="html">jekyll: build_upload 打包上传脚本</title><link href="/jekyll/python/build_upload/" rel="alternate" type="text/html" title="jekyll: build_upload 打包上传脚本" /><published>2023-07-01T12:13:20+08:00</published><updated>2023-07-01T12:13:20+08:00</updated><id>/jekyll/python/build_upload</id><content type="html" xml:base="/jekyll/python/build_upload/"><![CDATA[<ul>
  <li>写代码用了3分钟</li>
  <li>就是说这个脚本得至少跑60次才能回本</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 打包并上传Jekyll项目
</span>
<span class="n">commit_txt</span> <span class="o">=</span> <span class="sh">"</span><span class="s">add new</span><span class="sh">"</span>

<span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">subprocess</span>
<span class="kn">import</span> <span class="n">sys</span>
<span class="n">script_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">dirname</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">realpath</span><span class="p">(</span><span class="n">__file__</span><span class="p">))</span>
<span class="n">sys</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">script_path</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="se">\n</span><span class="s">===== jekyll build =====</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
<span class="n">os</span><span class="p">.</span><span class="nf">system</span><span class="p">(</span><span class="sh">"</span><span class="s">jekyll build --source hello_umas --destination docs</span><span class="sh">"</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="se">\n</span><span class="s">===== push source =====</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
<span class="n">subprocess</span><span class="p">.</span><span class="nf">run</span><span class="p">([</span><span class="sh">"</span><span class="s">git</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">add</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">.</span><span class="sh">"</span><span class="p">],</span> <span class="n">cwd</span><span class="o">=</span><span class="sh">"</span><span class="s">.</span><span class="sh">"</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">subprocess</span><span class="p">.</span><span class="nf">run</span><span class="p">([</span><span class="sh">"</span><span class="s">git</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">commit</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">-m</span><span class="sh">"</span><span class="p">,</span> <span class="n">commit_txt</span><span class="p">],</span> <span class="n">cwd</span><span class="o">=</span><span class="sh">"</span><span class="s">.</span><span class="sh">"</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">subprocess</span><span class="p">.</span><span class="nf">run</span><span class="p">([</span><span class="sh">"</span><span class="s">git</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">push</span><span class="sh">"</span><span class="p">],</span> <span class="n">cwd</span><span class="o">=</span><span class="sh">"</span><span class="s">.</span><span class="sh">"</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>好的，现在只需要一个脚本就可以打包上传修改了</li>
  <li>至于为什么前面用os.system后面用subprocess，因为两段代码分别是从不同的脚本里拷过来的（所以只用了3分钟），两个命令在这里没什么区别</li>
</ul>]]></content><author><name></name></author><category term="jekyll" /><category term="python" /><summary type="html"><![CDATA[写代码用了3分钟 就是说这个脚本得至少跑60次才能回本]]></summary></entry><entry><title type="html">jekyll: add_new 添加新文章</title><link href="/jekyll/python/add_new/" rel="alternate" type="text/html" title="jekyll: add_new 添加新文章" /><published>2023-07-01T10:00:00+08:00</published><updated>2023-07-01T10:00:00+08:00</updated><id>/jekyll/python/add_new</id><content type="html" xml:base="/jekyll/python/add_new/"><![CDATA[<ul>
  <li>首先安装 jekyll-post插件
    <ul>
      <li>tmd根本没有这个插件，GPT就知道胡诌</li>
    </ul>
  </li>
  <li>没找到好用的插件，python写一个，也不算麻烦</li>
  <li>需求有以下几点；
    <ul>
      <li>按命名格式创建md文件</li>
      <li>md文件写入yaml头</li>
      <li>创建图片目录</li>
      <li>md文件预先写入一行图片，后面添加图片可以直接复制粘贴</li>
      <li>md文件预先写入raw代码</li>
    </ul>
  </li>
  <li>代码如下
    <ul>
      <li>注意因为代码里包含了{% raw %}{% endraw %}字符串，为了在页面展示所以原始md文件中使用了双大括号转义符，<strong><em>这段代码复制使用时需要替换raw和endraw部分</em></strong>（很奇怪为什么不转义会报错，但转移后的字符串在代码中并没有被解析）</li>
      <li>注意info和title的文本比较复杂，最好用双层引号，保证不会被转义</li>
    </ul>
  </li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="sh">'''</span><span class="s">
2023.7.1
创建新文章
- 每次新建文章都要手动按时间命名，还要添加yaml头，挺麻烦的
- 添加图片创建目录也很麻烦
- 所以做了这个
</span><span class="sh">'''</span>

<span class="c1"># 修改这里：md文件名
</span><span class="n">file_name</span> <span class="o">=</span> <span class="sh">"</span><span class="s">add_new_test</span><span class="sh">"</span>
<span class="c1"># 修改这里：md放在哪个目录下
</span><span class="nb">dir</span> <span class="o">=</span> <span class="sh">"</span><span class="s">jekyll</span><span class="sh">"</span>
<span class="c1"># 修改这里：文章标题
</span><span class="n">title</span> <span class="o">=</span> <span class="sh">"'</span><span class="s">title</span><span class="sh">'"</span>
<span class="c1"># 修改这里：文章介绍
</span><span class="n">info</span> <span class="o">=</span> <span class="sh">"'</span><span class="s">info</span><span class="sh">'"</span>
<span class="c1"># 修改这里：文章分类
</span><span class="n">categories</span> <span class="o">=</span> <span class="p">[</span><span class="sh">"</span><span class="s">jekyll</span><span class="sh">"</span><span class="p">]</span>

<span class="kn">import</span> <span class="n">os</span>
<span class="kn">from</span> <span class="n">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
<span class="kn">import</span> <span class="n">sys</span>
<span class="n">script_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">dirname</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">realpath</span><span class="p">(</span><span class="n">__file__</span><span class="p">))</span>
<span class="n">sys</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">script_path</span><span class="p">)</span>

<span class="n">yaml</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">'</span><span class="s">layout</span><span class="sh">'</span><span class="p">:</span> <span class="sh">"</span><span class="s">post</span><span class="sh">"</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">title</span><span class="sh">'</span><span class="p">:</span> <span class="n">title</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">info</span><span class="sh">'</span><span class="p">:</span> <span class="n">info</span><span class="p">,</span>
    <span class="c1"># 注意时间必须要有+0800才能正确识别
</span>    <span class="sh">'</span><span class="s">date</span><span class="sh">'</span><span class="p">:</span> <span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">().</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%Y-%m-%d %H:%M:%S %z</span><span class="sh">"</span><span class="p">)</span> <span class="o">+</span> <span class="sh">"</span><span class="s"> +0800</span><span class="sh">"</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">categories</span><span class="sh">'</span><span class="p">:</span> <span class="n">categories</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">toc</span><span class="sh">'</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
<span class="p">}</span>

<span class="c1"># 创建md文件
</span><span class="n">file_name</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">().</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%Y-%m-%d</span><span class="sh">"</span><span class="p">)</span> <span class="o">+</span> <span class="sh">"</span><span class="s">-</span><span class="sh">"</span> <span class="o">+</span> <span class="n">file_name</span>
<span class="n">file_name_md</span> <span class="o">=</span> <span class="n">file_name</span> <span class="o">+</span> <span class="sh">"</span><span class="s">.md</span><span class="sh">"</span>
<span class="n">file_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">normpath</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">script_path</span><span class="p">,</span> <span class="sh">"</span><span class="s">hello_umas/_posts</span><span class="sh">"</span><span class="p">,</span> <span class="nb">dir</span><span class="p">,</span> <span class="n">file_name_md</span><span class="p">))</span>
<span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="sh">"</span><span class="s">w+</span><span class="sh">"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">md</span><span class="p">:</span>
    <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">---</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">yaml</span><span class="p">:</span>
        <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="n">key</span><span class="p">))</span>
        <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">: </span><span class="sh">"</span><span class="p">)</span>
        <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="n">yaml</span><span class="p">[</span><span class="n">key</span><span class="p">]))</span>
        <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">---</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
    <span class="c1"># 写入一张图片
</span>    <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="se">\n\n</span><span class="s">![引入图片]({{site.url}}/image/%s/%s/image_1.png)</span><span class="sh">"</span> <span class="o">%</span> <span class="p">(</span><span class="nb">dir</span><span class="p">,</span> <span class="n">file_name</span><span class="p">))</span>
    <span class="c1"># 写入raw代码
</span>    <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="se">\n\n</span><span class="s">{{ </span><span class="sh">"</span><span class="p">{</span><span class="o">%</span> <span class="n">raw</span> <span class="sh">"</span><span class="s"> }}%}</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">```</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">```</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">md</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">{{ </span><span class="sh">"</span><span class="p">{</span><span class="o">%</span> <span class="n">endraw</span> <span class="sh">"</span><span class="s"> }}%}</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># 创建图片目录
</span><span class="n">image_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">normpath</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">script_path</span><span class="p">,</span><span class="sh">"</span><span class="s">hello_umas/image</span><span class="sh">"</span><span class="p">,</span><span class="nb">dir</span><span class="p">,</span><span class="n">file_name</span><span class="p">))</span>
<span class="n">gitkeep</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">normpath</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">image_path</span><span class="p">,</span><span class="sh">"</span><span class="s">.gitkeep</span><span class="sh">"</span><span class="p">))</span>
<span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">exists</span><span class="p">(</span><span class="n">image_path</span><span class="p">):</span>
    <span class="n">os</span><span class="p">.</span><span class="nf">makedirs</span><span class="p">(</span><span class="n">image_path</span><span class="p">)</span>
<span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">gitkeep</span><span class="p">,</span><span class="sh">"</span><span class="s">w+</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">keep</span><span class="p">:</span>
    <span class="k">pass</span>
</code></pre></div></div>

<ul>
  <li>放在项目下add.py，使用前在代码里修改头部信息</li>
</ul>]]></content><author><name></name></author><category term="jekyll" /><category term="python" /><summary type="html"><![CDATA[首先安装 jekyll-post插件 tmd根本没有这个插件，GPT就知道胡诌]]></summary></entry><entry><title type="html">windows: redmi-ax6000路由器刷openwrt固件</title><link href="/windows/Redmi_openwrt/" rel="alternate" type="text/html" title="windows: redmi-ax6000路由器刷openwrt固件" /><published>2023-06-30T09:48:00+08:00</published><updated>2023-06-30T09:48:00+08:00</updated><id>/windows/Redmi_openwrt</id><content type="html" xml:base="/windows/Redmi_openwrt/"><![CDATA[<ul>
  <li>参考：
    <ul>
      <li>https://blog.csdn.net/sxf1061700625/article/details/130328437</li>
    </ul>
  </li>
  <li>路由器初始管理页面192.168.31.1</li>
  <li>
    <p>常用设置 - 系统设置 - 手动升级，选中刚才下载的redmi-ax6000-1.2.8.bin</p>
  </li>
  <li>管理页url可以看到stoc</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.31.1/cgi-bin/luci/;stok=2d884ca60cc3e0b7d0976cd02a662e41/web/setting/upgrade
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>stok=2d884ca60cc3e0b7d0976cd02a662e41
</code></pre></div></div>

<ul>
  <li>开启调试模式：替换下面代码的stock，浏览器打开这个链接，返回{code:0}</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.31.1/cgi-bin/luci/;stok=2d884ca60cc3e0b7d0976cd02a662e41/api/misystem/set_sys_time?timezone=%20%27%20%3B%20zz%3D%24%28dd%20if%3D%2Fdev%2Fzero%20bs%3D1%20count%3D2%202%3E%2Fdev%2Fnull%29%20%3B%20printf%20%27%A5%5A%25c%25c%27%20%24zz%20%24zz%20%7C%20mtd%20write%20-%20crash%20%3B%20
</code></pre></div></div>

<ul>
  <li>请求重启</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.31.1/cgi-bin/luci/;stok=2d884ca60cc3e0b7d0976cd02a662e41/api/misystem/set_sys_time?timezone=%20%27%20%3b%20reboot%20%3b%20
</code></pre></div></div>

<ul>
  <li>开启telnet</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.31.1/cgi-bin/luci/;stok=05f781c1c50e025342246e4c9a4765e3/api/misystem/set_sys_time?timezone=%20%27%20%3B%20bdata%20set%20telnet_en%3D1%20%3B%20bdata%20set%20ssh_en%3D1%20%3B%20bdata%20set%20uart_en%3D1%20%3B%20bdata%20commit%20%3B%20
</code></pre></div></div>

<ul>
  <li>重启，等待白灯亮起</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.31.1/cgi-bin/luci/;stok=05f781c1c50e025342246e4c9a4765e3/api/misystem/set_sys_time?timezone=%20%27%20%3b%20reboot%20%3b%20
</code></pre></div></div>

<ul>
  <li>打开终端用telnet连接（windows默认没这个命令，可以用wsl）</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>telnet 192.168.31.1
</code></pre></div></div>

<ul>
  <li>连接后用下面的命令解锁ssh</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /tmp &amp;&amp; curl --silent -O https://fastly.jsdelivr.net/gh/miaoermua/unlock-redmi-ax6000@main/setup.sh &amp;&amp; chmod +x setup.sh &amp;&amp; ./setup.sh
</code></pre></div></div>

<ul>
  <li>通过ssh进入路由器，密码admin</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh root@192.168.31.1
</code></pre></div></div>

<ul>
  <li>下载uboot</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /tmp &amp;&amp; curl --silent -O https://fastly.jsdelivr.net/gh/miaoermua/unlock-redmi-ax6000@main/uboot.sh &amp;&amp; chmod +x uboot.sh &amp;&amp; ./uboot.sh
</code></pre></div></div>

<ul>
  <li>备份原系统</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scp root@192.168.31.1:/tmp/mtd4_Factory.bin D:\s-workspace\ax6000\backup\
scp root@192.168.31.1:/tmp/mtd5_FIP.bin D:\s-workspace\ax6000\backup\
</code></pre></div></div>

<ul>
  <li>刷入uboot</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mtd erase FIP
mtd write /tmp/mt7986_redmi_ax6000-fip-fixed-parts.bin FIP
mtd verify /tmp/mt7986_redmi_ax6000-fip-fixed-parts.bin FIP
</code></pre></div></div>

<ul>
  <li>网线插入，网络和共享中心里修改以太网属性，ipv4</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>IP 地址：192.168.31.2
子网掩码：255.255.255.0
网关地址：192.168.31.1
</code></pre></div></div>

<ul>
  <li>断电，按住reset后通电，至少按住15秒</li>
  <li>
    <p>访问http://192.168.31.1/可以看到固件升级页面</p>
  </li>
  <li>下载固件
    <ul>
      <li>https://github.com/miaoermua/CatWrt/releases/tag/v23.2-Wireless-mt7986a</li>
    </ul>
  </li>
  <li>
    <p>在固件升级页面中上传，点击update，等待complete或者白灯亮起，progess页面需要刷新才能显示complete，如果显示failed就再上传刷写一次</p>
  </li>
  <li>
    <p>之后记得把电脑的ipv4改为自动</p>
  </li>
  <li>
    <p>刷完之后从192.168.1.4进入openwrt管理页，账号root，密码password</p>
  </li>
  <li>openwrt设置：</li>
  <li>
    <p>网络 - 接口 - lan，修改ipv4网关192.168.1.4，ipv4广播192.168.1.0</p>
  </li>
  <li>
    <p>wan口里设置pppoe拨号</p>
  </li>
  <li>
    <p>wifi名和密码在 [网络 - 无线 - 接口配置] 里面修改</p>
  </li>
  <li>clash没有内核，需要手动下载然后scp</li>
</ul>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[参考： https://blog.csdn.net/sxf1061700625/article/details/130328437]]></summary></entry><entry><title type="html">ts: import TypeScript导入文件</title><link href="/ts/import/" rel="alternate" type="text/html" title="ts: import TypeScript导入文件" /><published>2023-06-29T15:20:00+08:00</published><updated>2023-06-29T15:20:00+08:00</updated><id>/ts/import</id><content type="html" xml:base="/ts/import/"><![CDATA[<ul>
  <li>
    <p>传统方法直接引入报错：无法找到模块“@/utils/api_config.js”的声明文件</p>
  </li>
  <li>
    <p>法1，使用require</p>
  </li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">get_wsurl</span> <span class="o">=</span> <span class="nf">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">@/utils/api_config.js</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<ul>
  <li>法2，添加声明文件xxx.d.ts</li>
</ul>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">declare</span> <span class="kr">module</span> <span class="dl">"</span><span class="s2">@/utils/api_axios.js</span><span class="dl">"</span>
<span class="kr">declare</span> <span class="kr">module</span> <span class="dl">"</span><span class="s2">@/utils/api_config.js</span><span class="dl">"</span>
<span class="kr">declare</span> <span class="kr">module</span> <span class="dl">"</span><span class="s2">@/utils/api_usage.js</span><span class="dl">"</span>
<span class="kr">declare</span> <span class="kr">module</span> <span class="dl">"</span><span class="s2">@/utils/utils_tools.js</span><span class="dl">"</span>
</code></pre></div></div>

<ul>
  <li>法3，js改为ts，这时可能会报错An import path can only end with a ‘.ts’ extension when ‘allowImportingTsExtensions’ is enabled.</li>
  <li>修改tsconfig.json，根据提示添加：</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="dl">"</span><span class="s2">compilerOptions</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">allowImportingTsExtensions</span><span class="dl">"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">noEmit</span><span class="dl">"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</code></pre></div></div>

<ul>
  <li>这个方法有可能报错Unknown compiler option ‘allowImportingTsExtensions’.</li>
</ul>]]></content><author><name></name></author><category term="ts" /><summary type="html"><![CDATA[传统方法直接引入报错：无法找到模块“@/utils/api_config.js”的声明文件]]></summary></entry><entry><title type="html">jekyll: count 文章和类别计数</title><link href="/jekyll/count/" rel="alternate" type="text/html" title="jekyll: count 文章和类别计数" /><published>2023-06-29T15:10:00+08:00</published><updated>2023-06-29T15:10:00+08:00</updated><id>/jekyll/count</id><content type="html" xml:base="/jekyll/count/"><![CDATA[<h2 id="实现">实现</h2>

<ul>
  <li>这一行添加在了home.html里，显示在所有文章前面第一行</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;h3&gt;</span>Articles: {{ site.posts.size }} , Categories: {{ site.categories | size }}<span class="nt">&lt;/h3&gt;</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="jekyll" /><summary type="html"><![CDATA[实现]]></summary></entry><entry><title type="html">bash: rpi_status 树莓派状态监控脚本</title><link href="/bash/raspberry_pi/rpi_status/" rel="alternate" type="text/html" title="bash: rpi_status 树莓派状态监控脚本" /><published>2023-06-29T14:45:00+08:00</published><updated>2023-06-29T14:45:00+08:00</updated><id>/bash/raspberry_pi/rpi_status</id><content type="html" xml:base="/bash/raspberry_pi/rpi_status/"><![CDATA[<ul>
  <li>简单介绍项目需求
    <ul>
      <li>略</li>
    </ul>
  </li>
  <li>sh脚本</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#! /bin/bash</span>

<span class="c"># ### - rpi_status.sh [显示树莓派状态：温度]</span>
<span class="c"># - 脚本调用  </span>
<span class="c"># ```./show.sh```</span>


<span class="k">while</span> <span class="o">[</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span> <span class="k">do</span>

    <span class="c"># 输出时间</span>
    <span class="nb">date</span>

    <span class="c"># cpu温度</span>
    <span class="nv">get_temp</span><span class="o">=</span><span class="sb">`</span><span class="nb">cat</span> /sys/class/thermal/thermal_zone0/temp<span class="sb">`</span>
    <span class="nv">temprature</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="s2">"scale=3; </span><span class="nv">$get_temp</span><span class="s2">/1000"</span> | bc<span class="sb">`</span>
    <span class="nb">echo</span> <span class="s2">"temperature: </span><span class="nv">$temprature</span><span class="s2"> C"</span>

    <span class="c"># 网络监控</span>
    <span class="nb">cat</span> /proc/net/dev

    <span class="c"># cpu占用</span>
    

    <span class="c"># 内存占用</span>


    <span class="c"># 睡眠1秒，清屏</span>
    /bin/sleep 1
    clear
<span class="k">done</span>


</code></pre></div></div>]]></content><author><name></name></author><category term="bash" /><category term="raspberry_pi" /><summary type="html"><![CDATA[简单介绍项目需求 略]]></summary></entry><entry><title type="html">bash: init_samba 一键部署samba局域网文件共享</title><link href="/bash/init_samba/" rel="alternate" type="text/html" title="bash: init_samba 一键部署samba局域网文件共享" /><published>2023-06-29T14:35:00+08:00</published><updated>2023-06-29T14:35:00+08:00</updated><id>/bash/init_samba</id><content type="html" xml:base="/bash/init_samba/"><![CDATA[<ul>
  <li>简单介绍项目需求
    <ul>
      <li>略</li>
    </ul>
  </li>
  <li>sh脚本</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#! /bin/bash</span>

<span class="c"># ### - init_samba [samba局域网文件共享]</span>
<span class="c"># - 脚本调用  </span>
<span class="c"># ```./setup.sh```</span>
<span class="c"># - 参数修改</span>
<span class="c">#     - 系统适配(ubuntu/raspbian)：/init_samba/setup.sh - 选择conf文件(line9)</span>
<span class="c">#     - 共享文件夹参数：/init_samba/smb.conf - [public] (line243)</span>


<span class="c"># 切换工作目录</span>
<span class="nb">cd</span> <span class="sb">`</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="sb">`</span>


<span class="nv">package</span><span class="o">=</span><span class="s2">"samba"</span>
<span class="k">if  </span><span class="nb">type</span> <span class="nv">$package</span> <span class="o">&gt;</span> /dev/null 2&gt;&amp;1<span class="p">;</span><span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$package</span><span class="s2"> already installed"</span>
<span class="k">else
    </span>apt update
    apt <span class="nb">install</span> <span class="nv">$package</span> <span class="nt">-y</span>
<span class="k">fi


</span><span class="nb">cp</span> /etc/samba/smb.conf /etc/samba/smb.conf.bk
<span class="c"># cp smb_ubuntu.conf /etc/samba/smb.conf</span>
<span class="nb">cp </span>smb_raspbian.conf /etc/samba/smb.conf
<span class="nb">printf</span> <span class="s2">"umas1970</span><span class="se">\n</span><span class="s2">umas1970"</span> | smbpasswd <span class="nt">-a</span> root
samba restart

</code></pre></div></div>

<ul>
  <li>准备了两个版本的conf文件，分别用于树莓派和ubuntu系统，虽然内容很多但实际只有最后面[public]部分是smb的设置</li>
  <li>smb_raspbian.conf</li>
</ul>

<div class="language-conf highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#
# Sample configuration file for the Samba suite for Debian GNU/Linux.
#
#
# This is the main Samba configuration file. You should read the
# smb.conf(5) manual page in order to understand the options listed
# here. Samba has a huge number of configurable options most of which 
# are not shown in this example
#
# Some options that are often worth tuning have been included as
# commented-out examples in this file.
#  - When such options are commented with ";", the proposed setting
#    differs from the default Samba behaviour
#  - When commented with "#", the proposed setting is the default
#    behaviour of Samba but the option is considered important
#    enough to be mentioned here
#
# NOTE: Whenever you modify this file you should run the command
# "testparm" to check that you have not made any basic syntactic 
# errors. 
</span>
<span class="c">#======================= Global Settings =======================
</span>
[<span class="n">global</span>]

<span class="c">## Browsing/Identification ###
</span>
<span class="c"># Change this to the workgroup/NT-domain name your Samba server will part of
</span>   <span class="n">workgroup</span> = <span class="n">WORKGROUP</span>

<span class="c">#### Networking ####
</span>
<span class="c"># The specific set of interfaces / networks to bind to
# This can be either the interface name or an IP address/netmask;
# interface names are normally preferred
</span>;   <span class="n">interfaces</span> = <span class="m">127</span>.<span class="m">0</span>.<span class="m">0</span>.<span class="m">0</span>/<span class="m">8</span> <span class="n">eth0</span>

<span class="c"># Only bind to the named interfaces and/or networks; you must use the
# 'interfaces' option above to use this.
# It is recommended that you enable this feature if your Samba machine is
# not protected by a firewall or is a firewall itself.  However, this
# option cannot handle dynamic or non-broadcast interfaces correctly.
</span>;   <span class="n">bind</span> <span class="n">interfaces</span> <span class="n">only</span> = <span class="n">yes</span>



<span class="c">#### Debugging/Accounting ####
</span>
<span class="c"># This tells Samba to use a separate log file for each machine
# that connects
</span>   <span class="n">log</span> <span class="n">file</span> = /<span class="n">var</span>/<span class="n">log</span>/<span class="n">samba</span>/<span class="n">log</span>.%<span class="n">m</span>

<span class="c"># Cap the size of the individual log files (in KiB).
</span>   <span class="n">max</span> <span class="n">log</span> <span class="n">size</span> = <span class="m">1000</span>

<span class="c"># We want Samba to only log to /var/log/samba/log.{smbd,nmbd}.
# Append syslog@1 if you want important messages to be sent to syslog too.
</span>   <span class="n">logging</span> = <span class="n">file</span>

<span class="c"># Do something sensible when Samba crashes: mail the admin a backtrace
</span>   <span class="n">panic</span> <span class="n">action</span> = /<span class="n">usr</span>/<span class="n">share</span>/<span class="n">samba</span>/<span class="n">panic</span>-<span class="n">action</span> %<span class="n">d</span>


<span class="c">####### Authentication #######
</span>
<span class="c"># Server role. Defines in which mode Samba will operate. Possible
# values are "standalone server", "member server", "classic primary
# domain controller", "classic backup domain controller", "active
# directory domain controller". 
#
# Most people will want "standalone server" or "member server".
# Running as "active directory domain controller" will require first
# running "samba-tool domain provision" to wipe databases and create a
# new domain.
</span>   <span class="n">server</span> <span class="n">role</span> = <span class="n">standalone</span> <span class="n">server</span>

   <span class="n">obey</span> <span class="n">pam</span> <span class="n">restrictions</span> = <span class="n">yes</span>

<span class="c"># This boolean parameter controls whether Samba attempts to sync the Unix
# password with the SMB password when the encrypted SMB password in the
# passdb is changed.
</span>   <span class="n">unix</span> <span class="n">password</span> <span class="n">sync</span> = <span class="n">yes</span>

<span class="c"># For Unix password sync to work on a Debian GNU/Linux system, the following
# parameters must be set (thanks to Ian Kahan &lt;&lt;kahan@informatik.tu-muenchen.de&gt; for
# sending the correct chat script for the passwd program in Debian Sarge).
</span>   <span class="n">passwd</span> <span class="n">program</span> = /<span class="n">usr</span>/<span class="n">bin</span>/<span class="n">passwd</span> %<span class="n">u</span>
   <span class="n">passwd</span> <span class="n">chat</span> = *<span class="n">Enter</span>\<span class="n">snew</span>\<span class="n">s</span>*\<span class="n">spassword</span>:* %<span class="n">n</span>\<span class="n">n</span> *<span class="n">Retype</span>\<span class="n">snew</span>\<span class="n">s</span>*\<span class="n">spassword</span>:* %<span class="n">n</span>\<span class="n">n</span> *<span class="n">password</span>\<span class="n">supdated</span>\<span class="n">ssuccessfully</span>* .

<span class="c"># This boolean controls whether PAM will be used for password changes
# when requested by an SMB client instead of the program listed in
# 'passwd program'. The default is 'no'.
</span>   <span class="n">pam</span> <span class="n">password</span> <span class="n">change</span> = <span class="n">yes</span>

<span class="c"># This option controls how unsuccessful authentication attempts are mapped
# to anonymous connections
</span>   <span class="n">map</span> <span class="n">to</span> <span class="n">guest</span> = <span class="n">bad</span> <span class="n">user</span>

<span class="c">########## Domains ###########
</span>
<span class="c">#
# The following settings only takes effect if 'server role = classic
# primary domain controller', 'server role = classic backup domain controller'
# or 'domain logons' is set 
#
</span>
<span class="c"># It specifies the location of the user's
# profile directory from the client point of view) The following
# required a [profiles] share to be setup on the samba server (see
# below)
</span>;   <span class="n">logon</span> <span class="n">path</span> = \\%<span class="n">N</span>\<span class="n">profiles</span>\%<span class="n">U</span>
<span class="c"># Another common choice is storing the profile in the user's home directory
# (this is Samba's default)
#   logon path = \\%N\%U\profile
</span>
<span class="c"># The following setting only takes effect if 'domain logons' is set
# It specifies the location of a user's home directory (from the client
# point of view)
</span>;   <span class="n">logon</span> <span class="n">drive</span> = <span class="n">H</span>:
<span class="c">#   logon home = \\%N\%U
</span>
<span class="c"># The following setting only takes effect if 'domain logons' is set
# It specifies the script to run during logon. The script must be stored
# in the [netlogon] share
# NOTE: Must be store in 'DOS' file format convention
</span>;   <span class="n">logon</span> <span class="n">script</span> = <span class="n">logon</span>.<span class="n">cmd</span>

<span class="c"># This allows Unix users to be created on the domain controller via the SAMR
# RPC pipe.  The example command creates a user account with a disabled Unix
# password; please adapt to your needs
</span>; <span class="n">add</span> <span class="n">user</span> <span class="n">script</span> = /<span class="n">usr</span>/<span class="n">sbin</span>/<span class="n">adduser</span> --<span class="n">quiet</span> --<span class="n">disabled</span>-<span class="n">password</span> --<span class="n">gecos</span> <span class="s2">""</span> %<span class="n">u</span>

<span class="c"># This allows machine accounts to be created on the domain controller via the 
# SAMR RPC pipe.  
# The following assumes a "machines" group exists on the system
</span>; <span class="n">add</span> <span class="n">machine</span> <span class="n">script</span>  = /<span class="n">usr</span>/<span class="n">sbin</span>/<span class="n">useradd</span> -<span class="n">g</span> <span class="n">machines</span> -<span class="n">c</span> <span class="s2">"%u machine account"</span> -<span class="n">d</span> /<span class="n">var</span>/<span class="n">lib</span>/<span class="n">samba</span> -<span class="n">s</span> /<span class="n">bin</span>/<span class="n">false</span> %<span class="n">u</span>

<span class="c"># This allows Unix groups to be created on the domain controller via the SAMR
# RPC pipe.  
</span>; <span class="n">add</span> <span class="n">group</span> <span class="n">script</span> = /<span class="n">usr</span>/<span class="n">sbin</span>/<span class="n">addgroup</span> --<span class="n">force</span>-<span class="n">badname</span> %<span class="n">g</span>

<span class="c">############ Misc ############
</span>
<span class="c"># Using the following line enables you to customise your configuration
# on a per machine basis. The %m gets replaced with the netbios name
# of the machine that is connecting
</span>;   <span class="n">include</span> = /<span class="n">home</span>/<span class="n">samba</span>/<span class="n">etc</span>/<span class="n">smb</span>.<span class="n">conf</span>.%<span class="n">m</span>

<span class="c"># Some defaults for winbind (make sure you're not using the ranges
# for something else.)
</span>;   <span class="n">idmap</span> <span class="n">config</span> * :              <span class="n">backend</span> = <span class="n">tdb</span>
;   <span class="n">idmap</span> <span class="n">config</span> * :              <span class="n">range</span>   = <span class="m">3000</span>-<span class="m">7999</span>
;   <span class="n">idmap</span> <span class="n">config</span> <span class="n">YOURDOMAINHERE</span> : <span class="n">backend</span> = <span class="n">tdb</span>
;   <span class="n">idmap</span> <span class="n">config</span> <span class="n">YOURDOMAINHERE</span> : <span class="n">range</span>   = <span class="m">100000</span>-<span class="m">999999</span>
;   <span class="n">template</span> <span class="n">shell</span> = /<span class="n">bin</span>/<span class="n">bash</span>

<span class="c"># Setup usershare options to enable non-root users to share folders
# with the net usershare command.
</span>
<span class="c"># Maximum number of usershare. 0 means that usershare is disabled.
#   usershare max shares = 100
</span>
<span class="c"># Allow users who've been granted usershare privileges to create
# public shares, not just authenticated ones
</span>   <span class="n">usershare</span> <span class="n">allow</span> <span class="n">guests</span> = <span class="n">yes</span>

<span class="c">#======================= Share Definitions =======================
</span>
[<span class="n">homes</span>]
   <span class="n">comment</span> = <span class="n">Home</span> <span class="n">Directories</span>
   <span class="n">browseable</span> = <span class="n">no</span>

<span class="c"># By default, the home directories are exported read-only. Change the
# next parameter to 'no' if you want to be able to write to them.
</span>   <span class="n">read</span> <span class="n">only</span> = <span class="n">yes</span>

<span class="c"># File creation mask is set to 0700 for security reasons. If you want to
# create files with group=rw permissions, set next parameter to 0775.
</span>   <span class="n">create</span> <span class="n">mask</span> = <span class="m">0700</span>

<span class="c"># Directory creation mask is set to 0700 for security reasons. If you want to
# create dirs. with group=rw permissions, set next parameter to 0775.
</span>   <span class="n">directory</span> <span class="n">mask</span> = <span class="m">0700</span>

<span class="c"># By default, \\server\username shares can be connected to by anyone
# with access to the samba server.
# The following parameter makes sure that only "username" can connect
# to \\server\username
# This might need tweaking when using external authentication schemes
</span>   <span class="n">valid</span> <span class="n">users</span> = %<span class="n">S</span>

<span class="c"># Un-comment the following and create the netlogon directory for Domain Logons
# (you need to configure Samba to act as a domain controller too.)
</span>;[<span class="n">netlogon</span>]
;   <span class="n">comment</span> = <span class="n">Network</span> <span class="n">Logon</span> <span class="n">Service</span>
;   <span class="n">path</span> = /<span class="n">home</span>/<span class="n">samba</span>/<span class="n">netlogon</span>
;   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">yes</span>
;   <span class="n">read</span> <span class="n">only</span> = <span class="n">yes</span>

<span class="c"># Un-comment the following and create the profiles directory to store
# users profiles (see the "logon path" option above)
# (you need to configure Samba to act as a domain controller too.)
# The path below should be writable by all users so that their
# profile directory may be created the first time they log on
</span>;[<span class="n">profiles</span>]
;   <span class="n">comment</span> = <span class="n">Users</span> <span class="n">profiles</span>
;   <span class="n">path</span> = /<span class="n">home</span>/<span class="n">samba</span>/<span class="n">profiles</span>
;   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">no</span>
;   <span class="n">browseable</span> = <span class="n">no</span>
;   <span class="n">create</span> <span class="n">mask</span> = <span class="m">0600</span>
;   <span class="n">directory</span> <span class="n">mask</span> = <span class="m">0700</span>

[<span class="n">printers</span>]
   <span class="n">comment</span> = <span class="n">All</span> <span class="n">Printers</span>
   <span class="n">browseable</span> = <span class="n">no</span>
   <span class="n">path</span> = /<span class="n">var</span>/<span class="n">spool</span>/<span class="n">samba</span>
   <span class="n">printable</span> = <span class="n">yes</span>
   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">no</span>
   <span class="n">read</span> <span class="n">only</span> = <span class="n">yes</span>
   <span class="n">create</span> <span class="n">mask</span> = <span class="m">0700</span>

<span class="c"># Windows clients look for this share name as a source of downloadable
# printer drivers
</span>[<span class="n">print</span>$]
   <span class="n">comment</span> = <span class="n">Printer</span> <span class="n">Drivers</span>
   <span class="n">path</span> = /<span class="n">var</span>/<span class="n">lib</span>/<span class="n">samba</span>/<span class="n">printers</span>
   <span class="n">browseable</span> = <span class="n">yes</span>
   <span class="n">read</span> <span class="n">only</span> = <span class="n">yes</span>
   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">no</span>
<span class="c"># Uncomment to allow remote administration of Windows print drivers.
# You may need to replace 'lpadmin' with the name of the group your
# admin users are members of.
# Please note that you also need to set appropriate Unix permissions
# to the drivers directory for these users to have write rights in it
</span>;   <span class="n">write</span> <span class="n">list</span> = <span class="n">root</span>, @<span class="n">lpadmin</span>

[<span class="n">public</span>]
<span class="c"># boolean值参数注释写在后面会报错
</span>   <span class="c"># 说明文本
</span>   <span class="n">comment</span> = <span class="n">umasbox</span>       
   <span class="c"># 共享路径
</span>   <span class="n">path</span> = /<span class="n">root</span>/<span class="n">share</span>/     
   <span class="c"># 有效用户
</span>   <span class="n">valid</span> <span class="n">users</span> = <span class="n">root</span>      
   <span class="c"># 只读
</span>   <span class="n">read</span> <span class="n">only</span> = <span class="n">no</span>
   <span class="c"># 创建文件的权限
</span>   <span class="n">create</span> <span class="n">mask</span> = <span class="m">0777</span>      
   <span class="c"># 创建文件夹的权限
</span>   <span class="n">directory</span> <span class="n">mask</span> = <span class="m">0777</span>   
   <span class="c"># 允许访客 
</span>   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">no</span>  
   <span class="c"># 可见            
</span>   <span class="n">browseable</span> = <span class="n">yes</span>        
   
</code></pre></div></div>

<ul>
  <li>smb_ubuntu.conf</li>
</ul>

<div class="language-conf highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#
# Sample configuration file for the Samba suite for Debian GNU/Linux.
#
#
# This is the main Samba configuration file. You should read the
# smb.conf(5) manual page in order to understand the options listed
# here. Samba has a huge number of configurable options most of which 
# are not shown in this example
#
# Some options that are often worth tuning have been included as
# commented-out examples in this file.
#  - When such options are commented with ";", the proposed setting
#    differs from the default Samba behaviour
#  - When commented with "#", the proposed setting is the default
#    behaviour of Samba but the option is considered important
#    enough to be mentioned here
#
# NOTE: Whenever you modify this file you should run the command
# "testparm" to check that you have not made any basic syntactic 
# errors. 
</span>
<span class="c">#======================= Global Settings =======================
</span>
[<span class="n">global</span>]

<span class="c">## Browsing/Identification ###
</span>
<span class="c"># Change this to the workgroup/NT-domain name your Samba server will part of
</span>   <span class="n">workgroup</span> = <span class="n">WORKGROUP</span>

<span class="c"># server string is the equivalent of the NT Description field
</span>   <span class="n">server</span> <span class="n">string</span> = %<span class="n">h</span> <span class="n">server</span> (<span class="n">Samba</span>, <span class="n">Ubuntu</span>)

<span class="c">#### Networking ####
</span>
<span class="c"># The specific set of interfaces / networks to bind to
# This can be either the interface name or an IP address/netmask;
# interface names are normally preferred
</span>;   <span class="n">interfaces</span> = <span class="m">127</span>.<span class="m">0</span>.<span class="m">0</span>.<span class="m">0</span>/<span class="m">8</span> <span class="n">eth0</span>

<span class="c"># Only bind to the named interfaces and/or networks; you must use the
# 'interfaces' option above to use this.
# It is recommended that you enable this feature if your Samba machine is
# not protected by a firewall or is a firewall itself.  However, this
# option cannot handle dynamic or non-broadcast interfaces correctly.
</span>;   <span class="n">bind</span> <span class="n">interfaces</span> <span class="n">only</span> = <span class="n">yes</span>



<span class="c">#### Debugging/Accounting ####
</span>
<span class="c"># This tells Samba to use a separate log file for each machine
# that connects
</span>   <span class="n">log</span> <span class="n">file</span> = /<span class="n">var</span>/<span class="n">log</span>/<span class="n">samba</span>/<span class="n">log</span>.%<span class="n">m</span>

<span class="c"># Cap the size of the individual log files (in KiB).
</span>   <span class="n">max</span> <span class="n">log</span> <span class="n">size</span> = <span class="m">1000</span>

<span class="c"># We want Samba to only log to /var/log/samba/log.{smbd,nmbd}.
# Append syslog@1 if you want important messages to be sent to syslog too.
</span>   <span class="n">logging</span> = <span class="n">file</span>

<span class="c"># Do something sensible when Samba crashes: mail the admin a backtrace
</span>   <span class="n">panic</span> <span class="n">action</span> = /<span class="n">usr</span>/<span class="n">share</span>/<span class="n">samba</span>/<span class="n">panic</span>-<span class="n">action</span> %<span class="n">d</span>


<span class="c">####### Authentication #######
</span>
<span class="c"># Server role. Defines in which mode Samba will operate. Possible
# values are "standalone server", "member server", "classic primary
# domain controller", "classic backup domain controller", "active
# directory domain controller". 
#
# Most people will want "standalone server" or "member server".
# Running as "active directory domain controller" will require first
# running "samba-tool domain provision" to wipe databases and create a
# new domain.
</span>   <span class="n">server</span> <span class="n">role</span> = <span class="n">standalone</span> <span class="n">server</span>

   <span class="n">obey</span> <span class="n">pam</span> <span class="n">restrictions</span> = <span class="n">yes</span>

<span class="c"># This boolean parameter controls whether Samba attempts to sync the Unix
# password with the SMB password when the encrypted SMB password in the
# passdb is changed.
</span>   <span class="n">unix</span> <span class="n">password</span> <span class="n">sync</span> = <span class="n">yes</span>

<span class="c"># For Unix password sync to work on a Debian GNU/Linux system, the following
# parameters must be set (thanks to Ian Kahan &lt;&lt;kahan@informatik.tu-muenchen.de&gt; for
# sending the correct chat script for the passwd program in Debian Sarge).
</span>   <span class="n">passwd</span> <span class="n">program</span> = /<span class="n">usr</span>/<span class="n">bin</span>/<span class="n">passwd</span> %<span class="n">u</span>
   <span class="n">passwd</span> <span class="n">chat</span> = *<span class="n">Enter</span>\<span class="n">snew</span>\<span class="n">s</span>*\<span class="n">spassword</span>:* %<span class="n">n</span>\<span class="n">n</span> *<span class="n">Retype</span>\<span class="n">snew</span>\<span class="n">s</span>*\<span class="n">spassword</span>:* %<span class="n">n</span>\<span class="n">n</span> *<span class="n">password</span>\<span class="n">supdated</span>\<span class="n">ssuccessfully</span>* .

<span class="c"># This boolean controls whether PAM will be used for password changes
# when requested by an SMB client instead of the program listed in
# 'passwd program'. The default is 'no'.
</span>   <span class="n">pam</span> <span class="n">password</span> <span class="n">change</span> = <span class="n">yes</span>

<span class="c"># This option controls how unsuccessful authentication attempts are mapped
# to anonymous connections
</span>   <span class="n">map</span> <span class="n">to</span> <span class="n">guest</span> = <span class="n">bad</span> <span class="n">user</span>

<span class="c">########## Domains ###########
</span>
<span class="c">#
# The following settings only takes effect if 'server role = primary
# classic domain controller', 'server role = backup domain controller'
# or 'domain logons' is set 
#
</span>
<span class="c"># It specifies the location of the user's
# profile directory from the client point of view) The following
# required a [profiles] share to be setup on the samba server (see
# below)
</span>;   <span class="n">logon</span> <span class="n">path</span> = \\%<span class="n">N</span>\<span class="n">profiles</span>\%<span class="n">U</span>
<span class="c"># Another common choice is storing the profile in the user's home directory
# (this is Samba's default)
#   logon path = \\%N\%U\profile
</span>
<span class="c"># The following setting only takes effect if 'domain logons' is set
# It specifies the location of a user's home directory (from the client
# point of view)
</span>;   <span class="n">logon</span> <span class="n">drive</span> = <span class="n">H</span>:
<span class="c">#   logon home = \\%N\%U
</span>
<span class="c"># The following setting only takes effect if 'domain logons' is set
# It specifies the script to run during logon. The script must be stored
# in the [netlogon] share
# NOTE: Must be store in 'DOS' file format convention
</span>;   <span class="n">logon</span> <span class="n">script</span> = <span class="n">logon</span>.<span class="n">cmd</span>

<span class="c"># This allows Unix users to be created on the domain controller via the SAMR
# RPC pipe.  The example command creates a user account with a disabled Unix
# password; please adapt to your needs
</span>; <span class="n">add</span> <span class="n">user</span> <span class="n">script</span> = /<span class="n">usr</span>/<span class="n">sbin</span>/<span class="n">adduser</span> --<span class="n">quiet</span> --<span class="n">disabled</span>-<span class="n">password</span> --<span class="n">gecos</span> <span class="s2">""</span> %<span class="n">u</span>

<span class="c"># This allows machine accounts to be created on the domain controller via the 
# SAMR RPC pipe.  
# The following assumes a "machines" group exists on the system
</span>; <span class="n">add</span> <span class="n">machine</span> <span class="n">script</span>  = /<span class="n">usr</span>/<span class="n">sbin</span>/<span class="n">useradd</span> -<span class="n">g</span> <span class="n">machines</span> -<span class="n">c</span> <span class="s2">"%u machine account"</span> -<span class="n">d</span> /<span class="n">var</span>/<span class="n">lib</span>/<span class="n">samba</span> -<span class="n">s</span> /<span class="n">bin</span>/<span class="n">false</span> %<span class="n">u</span>

<span class="c"># This allows Unix groups to be created on the domain controller via the SAMR
# RPC pipe.  
</span>; <span class="n">add</span> <span class="n">group</span> <span class="n">script</span> = /<span class="n">usr</span>/<span class="n">sbin</span>/<span class="n">addgroup</span> --<span class="n">force</span>-<span class="n">badname</span> %<span class="n">g</span>

<span class="c">############ Misc ############
</span>
<span class="c"># Using the following line enables you to customise your configuration
# on a per machine basis. The %m gets replaced with the netbios name
# of the machine that is connecting
</span>;   <span class="n">include</span> = /<span class="n">home</span>/<span class="n">samba</span>/<span class="n">etc</span>/<span class="n">smb</span>.<span class="n">conf</span>.%<span class="n">m</span>

<span class="c"># Some defaults for winbind (make sure you're not using the ranges
# for something else.)
</span>;   <span class="n">idmap</span> <span class="n">config</span> * :              <span class="n">backend</span> = <span class="n">tdb</span>
;   <span class="n">idmap</span> <span class="n">config</span> * :              <span class="n">range</span>   = <span class="m">3000</span>-<span class="m">7999</span>
;   <span class="n">idmap</span> <span class="n">config</span> <span class="n">YOURDOMAINHERE</span> : <span class="n">backend</span> = <span class="n">tdb</span>
;   <span class="n">idmap</span> <span class="n">config</span> <span class="n">YOURDOMAINHERE</span> : <span class="n">range</span>   = <span class="m">100000</span>-<span class="m">999999</span>
;   <span class="n">template</span> <span class="n">shell</span> = /<span class="n">bin</span>/<span class="n">bash</span>

<span class="c"># Setup usershare options to enable non-root users to share folders
# with the net usershare command.
</span>
<span class="c"># Maximum number of usershare. 0 means that usershare is disabled.
#   usershare max shares = 100
</span>
<span class="c"># Allow users who've been granted usershare privileges to create
# public shares, not just authenticated ones
</span>   <span class="n">usershare</span> <span class="n">allow</span> <span class="n">guests</span> = <span class="n">yes</span>

<span class="c">#======================= Share Definitions =======================
</span>
<span class="c"># Un-comment the following (and tweak the other settings below to suit)
# to enable the default home directory shares. This will share each
# user's home directory as \\server\username
</span>;[<span class="n">homes</span>]
;   <span class="n">comment</span> = <span class="n">Home</span> <span class="n">Directories</span>
;   <span class="n">browseable</span> = <span class="n">no</span>

<span class="c"># By default, the home directories are exported read-only. Change the
# next parameter to 'no' if you want to be able to write to them.
</span>;   <span class="n">read</span> <span class="n">only</span> = <span class="n">yes</span>

<span class="c"># File creation mask is set to 0700 for security reasons. If you want to
# create files with group=rw permissions, set next parameter to 0775.
</span>;   <span class="n">create</span> <span class="n">mask</span> = <span class="m">0700</span>

<span class="c"># Directory creation mask is set to 0700 for security reasons. If you want to
# create dirs. with group=rw permissions, set next parameter to 0775.
</span>;   <span class="n">directory</span> <span class="n">mask</span> = <span class="m">0700</span>

<span class="c"># By default, \\server\username shares can be connected to by anyone
# with access to the samba server.
# Un-comment the following parameter to make sure that only "username"
# can connect to \\server\username
# This might need tweaking when using external authentication schemes
</span>;   <span class="n">valid</span> <span class="n">users</span> = %<span class="n">S</span>

<span class="c"># Un-comment the following and create the netlogon directory for Domain Logons
# (you need to configure Samba to act as a domain controller too.)
</span>;[<span class="n">netlogon</span>]
;   <span class="n">comment</span> = <span class="n">Network</span> <span class="n">Logon</span> <span class="n">Service</span>
;   <span class="n">path</span> = /<span class="n">home</span>/<span class="n">samba</span>/<span class="n">netlogon</span>
;   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">yes</span>
;   <span class="n">read</span> <span class="n">only</span> = <span class="n">yes</span>

<span class="c"># Un-comment the following and create the profiles directory to store
# users profiles (see the "logon path" option above)
# (you need to configure Samba to act as a domain controller too.)
# The path below should be writable by all users so that their
# profile directory may be created the first time they log on
</span>;[<span class="n">profiles</span>]
;   <span class="n">comment</span> = <span class="n">Users</span> <span class="n">profiles</span>
;   <span class="n">path</span> = /<span class="n">home</span>/<span class="n">samba</span>/<span class="n">profiles</span>
;   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">no</span>
;   <span class="n">browseable</span> = <span class="n">no</span>
;   <span class="n">create</span> <span class="n">mask</span> = <span class="m">0600</span>
;   <span class="n">directory</span> <span class="n">mask</span> = <span class="m">0700</span>

[<span class="n">printers</span>]
   <span class="n">comment</span> = <span class="n">All</span> <span class="n">Printers</span>
   <span class="n">browseable</span> = <span class="n">no</span>
   <span class="n">path</span> = /<span class="n">var</span>/<span class="n">spool</span>/<span class="n">samba</span>
   <span class="n">printable</span> = <span class="n">yes</span>
   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">no</span>
   <span class="n">read</span> <span class="n">only</span> = <span class="n">yes</span>
   <span class="n">create</span> <span class="n">mask</span> = <span class="m">0700</span>

<span class="c"># Windows clients look for this share name as a source of downloadable
# printer drivers
</span>[<span class="n">print</span>$]
   <span class="n">comment</span> = <span class="n">Printer</span> <span class="n">Drivers</span>
   <span class="n">path</span> = /<span class="n">var</span>/<span class="n">lib</span>/<span class="n">samba</span>/<span class="n">printers</span>
   <span class="n">browseable</span> = <span class="n">yes</span>
   <span class="n">read</span> <span class="n">only</span> = <span class="n">yes</span>
   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">no</span>
<span class="c"># Uncomment to allow remote administration of Windows print drivers.
# You may need to replace 'lpadmin' with the name of the group your
# admin users are members of.
# Please note that you also need to set appropriate Unix permissions
# to the drivers directory for these users to have write rights in it
</span>;   <span class="n">write</span> <span class="n">list</span> = <span class="n">root</span>, @<span class="n">lpadmin</span>

[<span class="n">public</span>]
   <span class="c"># 说明文本
</span>   <span class="n">comment</span> = <span class="n">umasbox</span>       
   <span class="c"># 共享路径
</span>   <span class="n">path</span> = /<span class="n">root</span>/<span class="n">share</span>/     
   <span class="c"># 有效用户
</span>   <span class="n">valid</span> <span class="n">users</span> = <span class="n">root</span>      
   <span class="c"># 只读
</span>   <span class="n">read</span> <span class="n">only</span> = <span class="n">no</span>
   <span class="c"># 创建文件的权限
</span>   <span class="n">create</span> <span class="n">mask</span> = <span class="m">0777</span>      
   <span class="c"># 创建文件夹的权限
</span>   <span class="n">directory</span> <span class="n">mask</span> = <span class="m">0777</span>   
   <span class="c"># 允许访客 
</span>   <span class="n">guest</span> <span class="n">ok</span> = <span class="n">no</span>  
   <span class="c"># 可见            
</span>   <span class="n">browseable</span> = <span class="n">yes</span>  

</code></pre></div></div>]]></content><author><name></name></author><category term="bash" /><summary type="html"><![CDATA[简单介绍项目需求 略]]></summary></entry><entry><title type="html">bash: init_ssh 一键部署linux主机的ssh环境</title><link href="/bash/init_ssh/" rel="alternate" type="text/html" title="bash: init_ssh 一键部署linux主机的ssh环境" /><published>2023-06-29T14:35:00+08:00</published><updated>2023-06-29T14:35:00+08:00</updated><id>/bash/init_ssh</id><content type="html" xml:base="/bash/init_ssh/"><![CDATA[<ul>
  <li>简单介绍项目需求
    <ul>
      <li>略</li>
    </ul>
  </li>
  <li>sh脚本</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#! /bin/bash</span>


<span class="c"># ### - init_ssh [ssh登录和gitee公钥设置]</span>
<span class="c"># - 脚本调用  </span>
<span class="c"># ```./setup.sh```</span>
<span class="c"># - 参数修改</span>
<span class="c">#     - 启动命令及端口</span>


<span class="c"># 参数：端口</span>
<span class="nv">port</span><span class="o">=</span>64822


<span class="c"># 参数：启动命令</span>
<span class="nv">ssh_cmd</span><span class="o">=</span><span class="s2">"service ssh start"</span>      <span class="c"># common ssh, 大多数环境适用</span>
<span class="c"># ssh_cmd="/sbin/sshd -p $port"    # termux ssh, 目前已知wsl环境不可用</span>


<span class="c"># 确认启动命令</span>
<span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">ssh command select: </span><span class="nv">$ssh_cmd</span><span class="se">\n</span><span class="s2">port: </span><span class="nv">$port</span><span class="se">\n</span><span class="s2">press enter to continue..."</span>
<span class="nb">read</span> <span class="nt">-r</span> input


<span class="c"># 切换工作目录</span>
<span class="nb">cd</span> <span class="sb">`</span><span class="nb">dirname</span> <span class="nv">$0</span><span class="sb">`</span>

apt update 
apt <span class="nb">install </span>ssh

<span class="c"># 创建.user_profile文件并写入.bashrc启动项</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-e</span> ~/.user_profile <span class="o">]</span><span class="p">;</span><span class="k">then
    </span><span class="nb">touch</span> ~/.user_profile
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"user_profile already exist"</span>
<span class="k">fi
if</span> <span class="o">!(</span> <span class="nb">cat</span> /root/.bashrc | <span class="nb">grep</span> <span class="s2">"user_profile"</span> <span class="o">&gt;</span> /dev/null <span class="o">)</span><span class="p">;</span><span class="k">then
    </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">echo 'setup command : ~/.user_profile'</span><span class="se">\n</span><span class="s2">"</span> <span class="o">&gt;&gt;</span> /root/.bashrc
    <span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"if [ -f ~/.user_profile ]; then</span><span class="se">\n\t</span><span class="s2">. ~/.user_profile</span><span class="se">\n</span><span class="s2">fi"</span> <span class="o">&gt;&gt;</span> /root/.bashrc
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"user_profile already loaded in bashrc"</span>
<span class="k">fi</span>

<span class="c"># ssh 连接配置</span>
<span class="c"># /etc/ssh/sshd_config允许root登录</span>
<span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n</span><span class="s2"> ========== ssh config ========== </span><span class="se">\n</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"root:umas1970"</span> | chpasswd 
<span class="k">if </span><span class="nb">cat</span> <span class="s1">'/etc/ssh/sshd_config'</span> | <span class="nb">grep</span> <span class="s2">"^PermitRootLogin"</span> <span class="o">&gt;</span> /dev/null <span class="p">;</span><span class="k">then
    </span><span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"/^PermitRootLogin*/cPermitRootLogin yes"</span> /etc/ssh/sshd_config
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"PermitRootLogin yes"</span> <span class="o">&gt;&gt;</span> /etc/ssh/sshd_config
<span class="k">fi
if </span><span class="nb">cat</span> <span class="s1">'/etc/ssh/sshd_config'</span> | <span class="nb">grep</span> <span class="s2">"^PasswordAuthentication"</span> <span class="o">&gt;</span> /dev/null <span class="p">;</span><span class="k">then
    </span><span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"/^PasswordAuthentication*/cPasswordAuthentication yes"</span> /etc/ssh/sshd_config
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"PasswordAuthentication yes"</span> <span class="o">&gt;&gt;</span> /etc/ssh/sshd_config
<span class="k">fi</span>
<span class="c"># 修改默认端口64822</span>
<span class="k">if </span><span class="nb">cat</span> <span class="s1">'/etc/ssh/sshd_config'</span> | <span class="nb">grep</span> <span class="s2">"^Port"</span> <span class="o">&gt;</span> /dev/null <span class="p">;</span><span class="k">then
    </span><span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"/^Port*/Port </span><span class="nv">$port</span><span class="s2">"</span> /etc/ssh/sshd_config
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"Port </span><span class="nv">$port</span><span class="s2">"</span> <span class="o">&gt;&gt;</span> /etc/ssh/sshd_config
<span class="k">fi</span>


<span class="c"># 加入.user_profile启动项</span>
<span class="k">if</span> <span class="o">!(</span> <span class="nb">cat</span> /root/.user_profile | <span class="nb">grep</span> <span class="s2">"user profile: ssh"</span> <span class="o">&gt;</span> /dev/null <span class="o">)</span><span class="p">;</span><span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"# user profile: ssh"</span> <span class="o">&gt;&gt;</span> /root/.user_profile
    <span class="nb">echo</span> <span class="s2">"echo ' * ssh: </span><span class="nv">$ssh_cmd</span><span class="s2"> starting ...'"</span> <span class="o">&gt;&gt;</span> /root/.user_profile
    <span class="nb">echo</span> <span class="s2">"</span><span class="nv">$ssh_cmd</span><span class="s2">"</span> <span class="o">&gt;&gt;</span> /root/.user_profile
    <span class="nb">echo</span> <span class="s2">"ip addr show | grep 192"</span> <span class="o">&gt;&gt;</span> /root/.user_profile
<span class="k">fi</span>

<span class="c"># 要求windows公钥</span>
<span class="nb">yes</span> | ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-P</span> <span class="s2">""</span> <span class="nt">-f</span> ~/.ssh/id_rsa
<span class="nb">echo</span> <span class="nt">-en</span> <span class="s2">"create ssh public key in windows :</span><span class="se">\n\n\t</span><span class="s2">ssh-keygen -t rsa -b 4096</span><span class="se">\n\n</span><span class="s2"> </span><span class="se">\</span><span class="s2">
then copy C:</span><span class="se">\U</span><span class="s2">sers</span><span class="se">\u</span><span class="s2">mas2017</span><span class="se">\.</span><span class="s2">ssh</span><span class="se">\i</span><span class="s2">d_rsa.pub here:</span><span class="se">\n</span><span class="s2">id_rsa.pub (press enter to skip): "</span>
<span class="nb">read</span> <span class="nt">-r</span> input
<span class="k">if</span> <span class="o">[[</span> <span class="nv">$input</span> <span class="o">!=</span> <span class="s2">""</span> <span class="o">]]</span><span class="p">;</span><span class="k">then
    if</span> <span class="o">[</span> <span class="nt">-f</span> ~/.ssh/authorized_keys <span class="o">]</span><span class="p">;</span><span class="k">then
        if </span><span class="nb">cat</span> ~/.ssh/authorized_keys | <span class="nb">grep</span> <span class="s2">"</span><span class="nv">$input</span><span class="s2">"</span> <span class="o">&gt;</span> /dev/null <span class="p">;</span><span class="k">then
            </span><span class="nb">echo</span> <span class="nv">$input</span> <span class="o">&gt;&gt;</span> ~/.ssh/authorized_keys
        <span class="k">else
            </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">公钥已存在</span><span class="se">\n</span><span class="s2">"</span>
        <span class="k">fi
    else 
        </span><span class="nb">echo</span> <span class="nv">$input</span> <span class="o">&gt;&gt;</span> ~/.ssh/authorized_keys 
    <span class="k">fi
fi</span>

<span class="c"># load一次bashrc作为启动</span>
<span class="nb">source</span> ~/.bashrc



<span class="c"># gitee 公钥设置</span>
<span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n</span><span class="s2"> ========== gitee config ========== </span><span class="se">\n</span><span class="s2">"</span>
git config <span class="nt">--global</span> user.email <span class="s2">"1970313791@qq.com"</span>
git config <span class="nt">--global</span> user.name <span class="s2">"umas"</span>
<span class="nb">printf</span> <span class="s2">"</span><span class="se">\n\n\n</span><span class="s2">"</span> | ssh-keygen <span class="nt">-t</span> ed25519 <span class="nt">-C</span> <span class="s2">"1970313791@qq.com"</span> 
<span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n\n</span><span class="s2">"</span>
<span class="nb">cat</span> ~/.ssh/id_ed25519.pub
<span class="nb">echo</span> <span class="nt">-en</span> <span class="s2">"</span><span class="se">\n\n</span><span class="s2">ssh public key above, fill in gitee:</span><span class="se">\n\n\t</span><span class="s2"> </span><span class="se">\</span><span class="s2">
https://gitee.com/profile/sshkeys</span><span class="se">\n\n</span><span class="s2">press enter to continue"</span>
<span class="nb">read</span> <span class="nt">-r</span> input
ssh <span class="nt">-T</span> git@gitee.com

<span class="nb">echo</span> <span class="nt">-en</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">process finish, The following command can change http-git to ssh-git</span><span class="se">\n\n\</span><span class="s2">
</span><span class="se">\t</span><span class="s2">git remote rm origin</span><span class="se">\n\</span><span class="s2">
</span><span class="se">\t</span><span class="s2">git remote add origin git@gitee.com:umas/umasbox.git</span><span class="se">\n\</span><span class="s2">
</span><span class="se">\t</span><span class="s2">git push --set-upstream origin master</span><span class="se">\n\n</span><span class="s2">"</span>

<span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">ssh setup finish</span><span class="se">\n</span><span class="s2">"</span>


</code></pre></div></div>]]></content><author><name></name></author><category term="bash" /><summary type="html"><![CDATA[简单介绍项目需求 略]]></summary></entry></feed>