<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-06-28T10:33:28+08:00</updated><id>/feed.xml</id><title type="html">umas’ awesome title</title><subtitle>umas&apos; awesome description for my new site here. It will appear in my document head meta (for Google search results) and in my feed.xml site description.</subtitle><entry><title type="html">pctools: video_compress</title><link href="/windows/video_compress/" rel="alternate" type="text/html" title="pctools: video_compress" /><published>2023-06-28T10:32:00+08:00</published><updated>2023-06-28T10:32:00+08:00</updated><id>/windows/video_compress</id><content type="html" xml:base="/windows/video_compress/"><![CDATA[<h3 id="使用moviepy">使用moviepy</h3>
<ul>
  <li>官方：https://zulko.github.io/moviepy/</li>
  <li>写入函数：write_videofile
    <ul>
      <li>https://zulko.github.io/moviepy/ref/VideoClip/VideoClip.html?highlight=write_videofile#moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip.write_videofile</li>
    </ul>
  </li>
  <li>测试可用，总比特率设定2k kbps时3分钟视频仅40MB（原片4.8w kbps，60fps，大小1G），但质量较差</li>
  <li>
    <p>总比特率1w kbps，结果203MB
降至20fps，结果204MB，明显感觉帧数不够，帧数居然不影响视频大小</p>
  </li>
  <li>安装ffmpg: https://www.gyan.dev/ffmpeg/builds/</li>
  <li>将bin目录添加到环境变量</li>
  <li>验证安装，控制台输入：ffmpeg.exe -version</li>
</ul>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[使用moviepy 官方：https://zulko.github.io/moviepy/ 写入函数：write_videofile https://zulko.github.io/moviepy/ref/VideoClip/VideoClip.html?highlight=write_videofile#moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip.write_videofile 测试可用，总比特率设定2k kbps时3分钟视频仅40MB（原片4.8w kbps，60fps，大小1G），但质量较差 总比特率1w kbps，结果203MB 降至20fps，结果204MB，明显感觉帧数不够，帧数居然不影响视频大小]]></summary></entry><entry><title type="html">pctools: hello_world</title><link href="/windows/hello_world/" rel="alternate" type="text/html" title="pctools: hello_world" /><published>2023-06-28T10:30:00+08:00</published><updated>2023-06-28T10:30:00+08:00</updated><id>/windows/hello_world</id><content type="html" xml:base="/windows/hello_world/"><![CDATA[<h1 id="因为时间久远已经无据可考了">因为时间久远已经无据可考了</h1>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[因为时间久远已经无据可考了]]></summary></entry><entry><title type="html">crawler: bookwalker</title><link href="/crawler/bookwalker/" rel="alternate" type="text/html" title="crawler: bookwalker" /><published>2023-06-28T10:20:00+08:00</published><updated>2023-06-28T10:20:00+08:00</updated><id>/crawler/bookwalker</id><content type="html" xml:base="/crawler/bookwalker/"><![CDATA[<ul>
  <li>已经集成在电脑配件项目中
    <ul>
      <li>https://github.com/umas2022/pctools</li>
    </ul>
  </li>
  <li>因为没能解析<code class="language-plaintext highlighter-rouge">&lt;canvas&gt;</code>标签,没能拿到图片的地址,所以改用屏幕截图的方法保存图片</li>
  <li>登录次数过多会触发网站的真人验证,所以登录的步骤改为手动,代码仅执行截图</li>
  <li>代码如下</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="sh">'''</span><span class="s">
create: 2023.1.1
bookwalker漫画爬虫

思路:
    1. 手动启动chrome打开debug端口,转交selenium
    2. 代码截图,点击进入下一页,根据viewport0的显示状态判断点击是否成功
    3. 图片锐化(+信息删除)和截图双线程同步进行(jpg节省空间)
    4. 截图保存后检查文件大小,小于设定值的截图被判断为loading页,重新截图
问题:
    1.截图清晰度受屏幕分辨率影响,质量较低;网页截图比平板截屏质量差
    2.对div.loading状态的判断不完全可靠,检查图片大小的方法也可能存在误判
    3.保存截图会花费约0.5s,使用多线程并行运行时报错
    4.ActionChains的点击动作会花费约0.5s,需要优化

chrome.exe --remote-debugging-port=9222 --user-data-dir=</span><span class="sh">"</span><span class="s">D:</span><span class="se">\\</span><span class="s">p-data</span><span class="se">\\</span><span class="s">chrome_temp</span><span class="sh">"</span><span class="s">

https://bookwalker.jp/bookshelf1/

</span><span class="sh">'''</span>


<span class="kn">import</span> <span class="n">time</span>
<span class="kn">import</span> <span class="n">threading</span>
<span class="kn">from</span> <span class="n">utils_logger.log</span> <span class="kn">import</span> <span class="n">logger_re</span> <span class="k">as</span> <span class="n">logger</span>
<span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">sys</span>
<span class="kn">import</span> <span class="n">copy</span>
<span class="c1"># 删除图片信息
</span><span class="kn">import</span> <span class="n">piexif</span>  <span class="c1"># pip install piexif
# 图片锐化
</span><span class="kn">from</span> <span class="n">PIL</span> <span class="kn">import</span> <span class="n">Image</span><span class="p">,</span> <span class="n">ImageEnhance</span>
<span class="c1"># 爬虫主程序
</span><span class="kn">from</span> <span class="n">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>  <span class="c1"># pip install selenium
# 查找元素
</span><span class="kn">from</span> <span class="n">selenium.webdriver.common.by</span> <span class="kn">import</span> <span class="n">By</span>
<span class="c1"># 添加反爬参数
</span><span class="kn">from</span> <span class="n">selenium.webdriver</span> <span class="kn">import</span> <span class="n">ChromeOptions</span>
<span class="c1"># 鼠标动作
</span><span class="kn">from</span> <span class="n">selenium.webdriver.common.action_chains</span> <span class="kn">import</span> <span class="n">ActionChains</span>


<span class="k">class</span> <span class="nc">CrawlerBookwalker</span><span class="p">():</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">json_set</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="bp">None</span><span class="p">:</span>
        <span class="sh">'''</span><span class="s">只有一个total_page是必须参数,其他都有预设值</span><span class="sh">'''</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="c1"># 截图总页数(设为1截取单页)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">total_page</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">total_page</span><span class="sh">"</span><span class="p">])</span>
            <span class="c1"># 起始页码(截图保存命名用)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">current_page</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">current_page</span><span class="sh">"</span><span class="p">])</span> <span class="k">if</span> <span class="sh">"</span><span class="s">current_page</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="mi">1</span>
            <span class="c1"># 图片保存位置(路径下不要有其他图片)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">save_path</span> <span class="o">=</span> <span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">save_path</span><span class="sh">"</span><span class="p">]</span> <span class="k">if</span> <span class="sh">"</span><span class="s">save_path</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="sa">r</span><span class="sh">"</span><span class="s">D:\s-workspace\crawler_save</span><span class="sh">"</span>
            <span class="c1"># 图片锐化系数(1为原图,实测2效果还行)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">sharp_factor</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">sharp_factor</span><span class="sh">"</span><span class="p">])</span> <span class="k">if</span> <span class="sh">"</span><span class="s">sharp_factor</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="mi">2</span>
            <span class="c1"># debug模式chrome数据位置(用于chrome的脚本启动)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">chrome_path</span> <span class="o">=</span> <span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">chrome_path</span><span class="sh">"</span><span class="p">]</span> <span class="k">if</span> <span class="sh">"</span><span class="s">chrome_path</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="sa">r</span><span class="sh">"</span><span class="s">D:\\p-data\\chrome_temp</span><span class="sh">"</span>
            <span class="c1"># chrome端口,一般不会被占用(用于chrome的脚本启动)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">chrome_port</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">chrome_port</span><span class="sh">"</span><span class="p">])</span> <span class="k">if</span> <span class="sh">"</span><span class="s">chrome_port</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="mi">9222</span>
            <span class="c1"># chrome driver位置(注意要和chrome版本一致)
</span>            <span class="c1"># https://chromedriver.chromium.org/downloads
</span>            <span class="n">self</span><span class="p">.</span><span class="n">driver_path</span> <span class="o">=</span> <span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">driver_path</span><span class="sh">"</span><span class="p">]</span> <span class="k">if</span> <span class="sh">"</span><span class="s">driver_path</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="sa">r</span><span class="sh">"</span><span class="s">D:\p-tools\chromedriver\chromedriver108.exe</span><span class="sh">"</span>
            <span class="c1"># 重新截图大小(KB)(不同截图环境loading页大小不相同)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">reshot_size</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">reshot_size</span><span class="sh">"</span><span class="p">])</span> <span class="k">if</span> <span class="sh">"</span><span class="s">reshot_size</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="mi">200</span>
            <span class="c1"># 截图/点击,重试次数上限
</span>            <span class="n">self</span><span class="p">.</span><span class="n">retry_times</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">retry_times</span><span class="sh">"</span><span class="p">])</span> <span class="k">if</span> <span class="sh">"</span><span class="s">retry_times</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="mi">8</span>
            <span class="c1"># y轴翻页点击位置(单位:像素,顶部为0)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">click_point_y</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">click_point_y</span><span class="sh">"</span><span class="p">])</span> <span class="k">if</span> <span class="sh">"</span><span class="s">click_point_y</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="mi">300</span>
            <span class="c1"># x轴翻页点击位置(单位:像素,左边为0)
</span>            <span class="n">self</span><span class="p">.</span><span class="n">click_point_x</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">json_set</span><span class="p">[</span><span class="sh">"</span><span class="s">click_point_x</span><span class="sh">"</span><span class="p">])</span> <span class="k">if</span> <span class="sh">"</span><span class="s">click_point_x</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">json_set</span> <span class="k">else</span> <span class="mi">100</span>

        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="n">logger</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="sh">"</span><span class="s">key error: %s</span><span class="sh">"</span> <span class="o">%</span> <span class="n">e</span><span class="p">)</span>
            <span class="k">return</span>

    <span class="k">def</span> <span class="nf">__init_chrome</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="sh">'''</span><span class="s">实例化浏览器</span><span class="sh">'''</span>
        <span class="n">option</span> <span class="o">=</span> <span class="nc">ChromeOptions</span><span class="p">()</span>
        <span class="n">option</span><span class="p">.</span><span class="nf">add_experimental_option</span><span class="p">(</span><span class="sh">'</span><span class="s">debuggerAddress</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">127.0.0.1:%d</span><span class="sh">'</span> <span class="o">%</span> <span class="n">self</span><span class="p">.</span><span class="n">chrome_port</span><span class="p">)</span>
        <span class="c1"># 实例化谷歌
</span>        <span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Chrome</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="n">self</span><span class="p">.</span><span class="n">driver_path</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="n">option</span><span class="p">)</span>
        <span class="c1"># 窗口尺寸不能超过显示尺寸,只能考虑找一台高分辨率显示器或者多屏拼接
</span>        <span class="c1"># driver.set_window_size(1080,1920)
</span>        <span class="k">return</span> <span class="n">driver</span>

    <span class="k">def</span> <span class="nf">__sharpen_main</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">shot_path</span><span class="p">):</span>
        <span class="sh">'''</span><span class="s">子线程:图片锐化+删除信息主函数</span><span class="sh">'''</span>
        <span class="n">shot_path_list</span> <span class="o">=</span> <span class="n">shot_path</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">/</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="n">shot_path</span><span class="p">)</span>
        <span class="n">enhancer</span> <span class="o">=</span> <span class="n">ImageEnhance</span><span class="p">.</span><span class="nc">Sharpness</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
        <span class="n">im_s</span> <span class="o">=</span> <span class="n">enhancer</span><span class="p">.</span><span class="nf">enhance</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">sharp_factor</span><span class="p">)</span>
        <span class="n">shot_path_list</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">shot_path_list</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nf">replace</span><span class="p">(</span><span class="sh">"</span><span class="s">shot</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">sharp</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">sharp_path</span> <span class="o">=</span> <span class="sh">"</span><span class="s">/</span><span class="sh">"</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">shot_path_list</span><span class="p">)</span>
        <span class="c1"># jpg节省点空间
</span>        <span class="n">im_s</span> <span class="o">=</span> <span class="n">im_s</span><span class="p">.</span><span class="nf">convert</span><span class="p">(</span><span class="sh">'</span><span class="s">RGB</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">sharp_path</span> <span class="o">=</span> <span class="n">sharp_path</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">"</span><span class="s">.png</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">.jpg</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">im_s</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="n">sharp_path</span><span class="p">)</span>
        <span class="n">os</span><span class="p">.</span><span class="nf">remove</span><span class="p">(</span><span class="n">shot_path</span><span class="p">)</span>
        <span class="c1"># 删除信息(其实正常截图本来就不含信息)
</span>        <span class="n">piexif</span><span class="p">.</span><span class="nf">remove</span><span class="p">(</span><span class="n">sharp_path</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">open_chrome</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="sh">'''</span><span class="s">启动debug模式chrome</span><span class="sh">'''</span>
        <span class="n">os</span><span class="p">.</span><span class="nf">system</span><span class="p">(</span><span class="sh">'</span><span class="s">chrome.exe --remote-debugging-port=%d --user-data-dir=</span><span class="sh">"</span><span class="s">%s</span><span class="sh">"'</span> <span class="o">%</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">chrome_port</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">chrome_path</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="sh">'''</span><span class="s">开始处理</span><span class="sh">'''</span>
        <span class="c1"># 实例化浏览器
</span>        <span class="n">driver</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="nf">__init_chrome</span><span class="p">()</span>

        <span class="sh">'''</span><span class="s">进入漫画页并逐页截屏</span><span class="sh">'''</span>
        <span class="n">time_start</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="nf">time</span><span class="p">()</span>
        <span class="c1"># 当前激活标签页为0
</span>        <span class="n">driver</span><span class="p">.</span><span class="n">switch_to</span><span class="p">.</span><span class="nf">window</span><span class="p">(</span><span class="n">driver</span><span class="p">.</span><span class="n">window_handles</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">viewport_before</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">div[id=</span><span class="sh">"</span><span class="s">viewport0</span><span class="sh">"'</span><span class="p">).</span><span class="nf">is_displayed</span><span class="p">()</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">total_page</span><span class="p">):</span>
            <span class="n">num</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">self</span><span class="p">.</span><span class="n">current_page</span>
            <span class="c1"># 等待loading状态结束(对loading的判断并不完全可靠,建议翻页后的wait_time&gt;0.5s)
</span>            <span class="n">div_loading</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">div[class=</span><span class="sh">"</span><span class="s">loading</span><span class="sh">"'</span><span class="p">)</span>
            <span class="k">while</span> <span class="n">div_loading</span><span class="p">.</span><span class="nf">is_displayed</span><span class="p">():</span>
                <span class="n">logger</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">loading ...</span><span class="sh">"</span><span class="p">)</span>
                <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="c1"># 浏览器全屏截图(截图动作占用约0.5s,并行报错暂未解决)
</span>            <span class="n">time_cost</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="nf">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">time_start</span><span class="p">)</span>
            <span class="n">time_left</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">time_cost</span> <span class="o">/</span> <span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">total_page</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
            <span class="n">logger</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">shot : %d / %d , page : %d, remaining : %d s</span><span class="sh">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">total_page</span><span class="p">,</span> <span class="n">num</span><span class="p">,</span> <span class="n">time_left</span><span class="p">))</span>
            <span class="n">shot_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">save_path</span><span class="p">,</span> <span class="sh">"</span><span class="s">shot_%d.png</span><span class="sh">"</span> <span class="o">%</span> <span class="n">num</span><span class="p">)</span>
            <span class="n">driver</span><span class="p">.</span><span class="nf">save_screenshot</span><span class="p">(</span><span class="n">shot_path</span><span class="p">)</span>
            <span class="c1"># 检查截图大小,小于设定值为loading页,重新截图
</span>            <span class="n">shot_retry</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
                <span class="n">shot_retry</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="n">shot_size</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">getsize</span><span class="p">(</span><span class="n">shot_path</span><span class="p">)</span> <span class="o">/</span> <span class="mi">1024</span>
                <span class="k">if</span> <span class="n">shot_size</span> <span class="o">&gt;</span> <span class="n">self</span><span class="p">.</span><span class="n">reshot_size</span><span class="p">:</span>
                    <span class="k">break</span>
                <span class="k">if</span> <span class="n">shot_retry</span> <span class="o">&gt;</span> <span class="n">self</span><span class="p">.</span><span class="n">retry_times</span><span class="p">:</span>
                    <span class="n">logger</span><span class="p">.</span><span class="nf">warning</span><span class="p">(</span><span class="sh">"</span><span class="s">shot %d times retry! file: %s</span><span class="sh">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">retry_times</span><span class="p">,</span> <span class="n">shot_path</span><span class="p">))</span>
                    <span class="k">break</span>
                <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
                <span class="n">logger</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">shot retry %d ...</span><span class="sh">"</span> <span class="o">%</span> <span class="n">shot_retry</span><span class="p">)</span>
                <span class="n">driver</span><span class="p">.</span><span class="nf">save_screenshot</span><span class="p">(</span><span class="n">shot_path</span><span class="p">)</span>
            <span class="c1"># 锐化程序并行进行
</span>            <span class="n">th</span> <span class="o">=</span> <span class="n">threading</span><span class="p">.</span><span class="nc">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">self</span><span class="p">.</span><span class="n">__sharpen_main</span><span class="p">,</span> <span class="n">args</span><span class="o">=</span><span class="p">[</span><span class="n">shot_path</span><span class="p">],</span> <span class="n">daemon</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
            <span class="n">th</span><span class="p">.</span><span class="nf">start</span><span class="p">()</span>
            <span class="c1"># 点击进入下一页(即使设置了duration,这个动作仍然会占用约0.5s的时间)
</span>            <span class="n">click_retry</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
                <span class="n">click_retry</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="nc">ActionChains</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span> <span class="n">duration</span><span class="o">=</span><span class="mi">10</span><span class="p">).</span><span class="nf">move_by_offset</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">click_point_x</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">click_point_y</span><span class="p">).</span><span class="nf">click</span><span class="p">().</span><span class="nf">move_by_offset</span><span class="p">(</span><span class="mi">0</span> <span class="o">-</span> <span class="n">self</span><span class="p">.</span><span class="n">click_point_x</span><span class="p">,</span> <span class="mi">0</span> <span class="o">-</span> <span class="n">self</span><span class="p">.</span><span class="n">click_point_y</span><span class="p">).</span><span class="nf">perform</span><span class="p">()</span>
                <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
                <span class="n">viewport_now</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">div[id=</span><span class="sh">"</span><span class="s">viewport0</span><span class="sh">"'</span><span class="p">).</span><span class="nf">is_displayed</span><span class="p">()</span>
                <span class="k">if</span> <span class="n">viewport_now</span> <span class="o">!=</span> <span class="n">viewport_before</span><span class="p">:</span>
                    <span class="k">break</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
                    <span class="n">viewport_now</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">div[id=</span><span class="sh">"</span><span class="s">viewport0</span><span class="sh">"'</span><span class="p">).</span><span class="nf">is_displayed</span><span class="p">()</span>
                    <span class="k">if</span> <span class="n">viewport_now</span> <span class="o">!=</span> <span class="n">viewport_before</span><span class="p">:</span>
                        <span class="k">break</span>
                    <span class="n">logger</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">click retry %d ...</span><span class="sh">"</span> <span class="o">%</span> <span class="n">click_retry</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">click_retry</span> <span class="o">&gt;</span> <span class="n">self</span><span class="p">.</span><span class="n">retry_times</span><span class="p">:</span>
                        <span class="n">logger</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="sh">"</span><span class="s">click %d times retry!</span><span class="sh">"</span> <span class="o">%</span> <span class="n">self</span><span class="p">.</span><span class="n">retry_times</span><span class="p">)</span>
                        <span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

            <span class="n">viewport_before</span> <span class="o">=</span> <span class="n">viewport_now</span>
            <span class="c1"># wait_here = input("go &gt;&gt;")
</span>
        <span class="n">logger</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">shot-function finish</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">driver</span><span class="p">.</span><span class="nf">quit</span><span class="p">()</span>

</code></pre></div></div>]]></content><author><name></name></author><category term="crawler" /><summary type="html"><![CDATA[已经集成在电脑配件项目中 https://github.com/umas2022/pctools]]></summary></entry><entry><title type="html">crawler: selenium</title><link href="/crawler/selenium/" rel="alternate" type="text/html" title="crawler: selenium" /><published>2023-06-28T10:18:00+08:00</published><updated>2023-06-28T10:18:00+08:00</updated><id>/crawler/selenium</id><content type="html" xml:base="/crawler/selenium/"><![CDATA[<h3 id="安装chromedriver">安装chromedriver</h3>
<ul>
  <li>https://chromedriver.chromium.org/downloads
    <ul>
      <li>注意版本要和已安装的chrome一样</li>
    </ul>
  </li>
  <li>实测添加环境变量不好用，使用手动引入：
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chrome_driver = r"C:\Program Files\Google\Chrome\Application\chromedriver.exe"
chrome = webdriver.Chrome(executable_path=chrome_driver)
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="操作网页">操作网页</h3>

<ul>
  <li>一个输入用户名和密码的例子
    <div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">selenium.webdriver.common.by</span> <span class="kn">import</span> <span class="n">By</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">input[name=</span><span class="sh">"</span><span class="s">j_username</span><span class="sh">"'</span><span class="p">).</span><span class="nf">send_keys</span><span class="p">(</span><span class="sh">"</span><span class="s">1970313791@qq.com</span><span class="sh">"</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">input[name=</span><span class="sh">"</span><span class="s">password</span><span class="sh">"'</span><span class="p">).</span><span class="nf">send_keys</span><span class="p">(</span><span class="sh">"</span><span class="s">xxxxxxxxxxx</span><span class="sh">"</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">button[class=</span><span class="sh">"</span><span class="s">g-recaptcha c-btn--forward</span><span class="sh">"'</span><span class="p">).</span><span class="nf">click</span><span class="p">()</span>
</code></pre></div>    </div>
  </li>
  <li>常用的功能键</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from selenium.webdriver.common.keys import Keys

send_keys(Keys.BACK_SPACE) 删除键（BackSpace）
send_keys(Keys.SPACE) 空格键(Space)
send_keys(Keys.TAB) 制表键(Tab)
send_keys(Keys.ESCAPE) 回退键（Esc）
send_keys(Keys.ENTER) 回车键（Enter）
send_keys(Keys.CONTROL,‘a’) 全选（Ctrl+A）
send_keys(Keys.CONTROL,‘c’) 复制（Ctrl+C）
send_keys(Keys.CONTROL,‘x’) 剪切（Ctrl+X）
send_keys(Keys.CONTROL,‘v’) 粘贴（Ctrl+V）
send_keys(Keys.F1) 键盘 F1
……
send_keys(Keys.F12) 键盘 F12

Keys.BACK_SPACE：回退键（BackSpace）
Keys.TAB：制表键（Tab）
Keys.ENTER：回车键（Enter）
Keys.SHIFT：大小写转换键（Shift）
Keys.CONTROL：Control键（Ctrl）
Keys.ALT：ALT键（Alt）
Keys.ESCAPE：返回键（Esc）
Keys.SPACE：空格键（Space）
Keys.PAGE_UP：翻页键上（Page Up）
Keys.PAGE_DOWN：翻页键下（Page Down）
Keys.END：行尾键（End）
Keys.HOME：行首键（Home）
Keys.LEFT：方向键左（Left）
Keys.UP：方向键上（Up）
Keys.RIGHT：方向键右（Right）
Keys.DOWN：方向键下（Down）
Keys.INSERT：插入键（Insert）
DELETE：删除键（Delete）
NUMPAD0 ~ NUMPAD9：数字键1-9
F1 ~ F12：F1 - F12键
(Keys.CONTROL, ‘a’)：组合键Control+a，全选
(Keys.CONTROL, ‘c’)：组合键Control+c，复制
(Keys.CONTROL, ‘x’)：组合键Control+x，剪切
(Keys.CONTROL, ‘v’)：组合键Control+v，粘贴
</code></pre></div></div>

<h3 id="切换标签页">切换标签页</h3>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">new_tap</span> <span class="o">=</span> <span class="sh">"</span><span class="s">window.open(</span><span class="sh">'</span><span class="s">%s</span><span class="sh">'</span><span class="s">)</span><span class="sh">"</span> <span class="o">%</span> <span class="n">url_home</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">execute_script</span><span class="p">(</span><span class="n">new_tap</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="n">switch_to</span><span class="p">.</span><span class="nf">window</span><span class="p">(</span><span class="n">driver</span><span class="p">.</span><span class="n">window_handles</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div></div>

<h3 id="反扒1windownavigatorwebdriver">反扒1：window.navigator.webdriver</h3>

<ul>
  <li>window.navigator.webdriver参数在使用selenium时为true，需要消除这个参数</li>
  <li>可以直接在console里敲这个参数查看</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">selenium.webdriver</span> <span class="kn">import</span> <span class="n">ChromeOptions</span>

<span class="sh">'''</span><span class="s">反爬：消除window.navigator.webdriver</span><span class="sh">'''</span>
<span class="n">option</span> <span class="o">=</span> <span class="nc">ChromeOptions</span><span class="p">()</span>
<span class="c1"># 开启实验性功能
</span><span class="n">option</span><span class="p">.</span><span class="nf">add_experimental_option</span><span class="p">(</span><span class="sh">'</span><span class="s">excludeSwitches</span><span class="sh">'</span><span class="p">,[</span><span class="sh">'</span><span class="s">enable-automation</span><span class="sh">'</span><span class="p">])</span>
<span class="c1"># 去除特征值
</span><span class="n">option</span><span class="p">.</span><span class="nf">add_argument</span><span class="p">(</span><span class="sh">"</span><span class="s">--disable-blink-features=AutomationControlled</span><span class="sh">"</span><span class="p">)</span>
<span class="c1"># 实例化谷歌
</span><span class="n">chrome_driver</span> <span class="o">=</span> <span class="sa">r</span><span class="sh">"</span><span class="s">D:\p-tools\chromedriver\chromedriver106.exe</span><span class="sh">"</span>
<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Chrome</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="n">chrome_driver</span><span class="p">,</span><span class="n">options</span><span class="o">=</span><span class="n">option</span><span class="p">)</span>
</code></pre></div></div>

<p>实测对bookwalker有效</p>

<h3 id="反扒2接管已有浏览器">反扒2：接管已有浏览器</h3>

<ul>
  <li>
    <p>这个效果非常好，属于物理外挂</p>
  </li>
  <li>命令行启动浏览器：
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chrome.exe --remote-debugging-port=9222 --user-data-dir="D:\p-data\chrome_temp"
</code></pre></div>    </div>
  </li>
  <li>代码示例：
    <div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">selenium.webdriver</span> <span class="kn">import</span> <span class="n">ChromeOptions</span>
<span class="c1"># 反爬：接管已打开的浏览器
</span><span class="n">option</span> <span class="o">=</span> <span class="nc">ChromeOptions</span><span class="p">()</span>
<span class="n">option</span><span class="p">.</span><span class="nf">add_experimental_option</span><span class="p">(</span><span class="sh">'</span><span class="s">debuggerAddress</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">127.0.0.1:9222</span><span class="sh">'</span><span class="p">)</span>
<span class="c1"># 实例化谷歌
</span><span class="n">chrome_driver</span> <span class="o">=</span> <span class="sa">r</span><span class="sh">"</span><span class="s">D:\p-tools\chromedriver\chromedriver106.exe</span><span class="sh">"</span>
<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Chrome</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="n">chrome_driver</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="n">option</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="截屏">截屏</h3>

<ul>
  <li>截全屏
    <div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">driver</span><span class="p">.</span><span class="nf">save_screenshot</span><span class="p">(</span><span class="sh">"</span><span class="s">shot_screen.png</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>截元素
    <div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">img</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">'</span><span class="s">div[class=</span><span class="sh">"</span><span class="s">currentScreen</span><span class="sh">"'</span><span class="p">)</span>
<span class="n">img</span><span class="p">.</span><span class="nf">screenshot</span><span class="p">(</span><span class="sh">"</span><span class="s">shot_img.png</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name></name></author><category term="crawler" /><summary type="html"><![CDATA[安装chromedriver https://chromedriver.chromium.org/downloads 注意版本要和已安装的chrome一样 实测添加环境变量不好用，使用手动引入： chrome_driver = r"C:\Program Files\Google\Chrome\Application\chromedriver.exe" chrome = webdriver.Chrome(executable_path=chrome_driver)]]></summary></entry><entry><title type="html">crawler: request</title><link href="/crawler/request/" rel="alternate" type="text/html" title="crawler: request" /><published>2023-06-28T10:17:00+08:00</published><updated>2023-06-28T10:17:00+08:00</updated><id>/crawler/request</id><content type="html" xml:base="/crawler/request/"><![CDATA[<ul>
  <li>request基本例子</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="sh">"</span><span class="s">https://bookwalker.jp/de57a21d74-d918-47df-b22f-b3a9454e59df/</span><span class="sh">"</span>
<span class="n">res</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">)</span>
<span class="k">if</span> <span class="ow">not</span> <span class="n">res</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">access failed, error code : %d</span><span class="sh">"</span> <span class="o">%</span> <span class="n">res</span><span class="p">.</span><span class="n">status_code</span><span class="p">)</span>
    <span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="sh">"</span><span class="s">./save.html</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">a</span><span class="sh">"</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">save_file</span><span class="p">:</span>
    <span class="n">save_file</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="crawler" /><summary type="html"><![CDATA[request基本例子]]></summary></entry><entry><title type="html">windows: clash</title><link href="/windows/clash/" rel="alternate" type="text/html" title="windows: clash" /><published>2023-06-28T10:14:00+08:00</published><updated>2023-06-28T10:14:00+08:00</updated><id>/windows/clash</id><content type="html" xml:base="/windows/clash/"><![CDATA[<h3 id="局域网">局域网</h3>
<ul>
  <li>clash主机（安卓）
    <ul>
      <li>设置-&gt;覆写-&gt;允许来自局域网的连接-&gt;启用</li>
      <li>设备连接时填写主机ip，端口7890</li>
      <li>（switch用代理不能上YouTube但是宝可梦可以联机（NAT A））</li>
    </ul>
  </li>
  <li>clash主机（PC）
    <ul>
      <li>局域网的方法没有设置成功，可能和防火墙有关系</li>
      <li>使用TUN模式+热点更方便</li>
      <li>clash首先安装服务模式，等待重启小地球变绿</li>
      <li><img src="/image/windows/2023-06-28-clash/clash_1.jpg" alt="clash_1" /></li>
      <li>此时右下角网络连接显示为clash</li>
      <li><img src="/image/windows/2023-06-28-clash/clash_2.jpg" alt="clash_2" /></li>
      <li>打开电脑热点，进入更改适配器选项可以看到clash的网卡和热点的网卡（本地连接*2）</li>
      <li><img src="/image/windows/2023-06-28-clash/clash_3.jpg" alt="clash_3" /></li>
      <li>clash共享连接到热点</li>
      <li><img src="/image/windows/2023-06-28-clash/clash_4.jpg" alt="clash_4" /></li>
      <li>其他设备连接到热点就可以翻墙</li>
      <li>（这种方法switch不能联机（NAT F））</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[局域网 clash主机（安卓） 设置-&gt;覆写-&gt;允许来自局域网的连接-&gt;启用 设备连接时填写主机ip，端口7890 （switch用代理不能上YouTube但是宝可梦可以联机（NAT A）） clash主机（PC） 局域网的方法没有设置成功，可能和防火墙有关系 使用TUN模式+热点更方便 clash首先安装服务模式，等待重启小地球变绿 此时右下角网络连接显示为clash 打开电脑热点，进入更改适配器选项可以看到clash的网卡和热点的网卡（本地连接*2） clash共享连接到热点 其他设备连接到热点就可以翻墙 （这种方法switch不能联机（NAT F））]]></summary></entry><entry><title type="html">windows: env_path</title><link href="/windows/env_path/" rel="alternate" type="text/html" title="windows: env_path" /><published>2023-06-28T10:11:00+08:00</published><updated>2023-06-28T10:11:00+08:00</updated><id>/windows/env_path</id><content type="html" xml:base="/windows/env_path/"><![CDATA[<p><img src="/image/windows/2023-06-28-env_path/image_1.png" alt="引入图片" /></p>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">windows: startup.vbs</title><link href="/windows/startup.vbs/" rel="alternate" type="text/html" title="windows: startup.vbs" /><published>2023-06-28T10:09:00+08:00</published><updated>2023-06-28T10:09:00+08:00</updated><id>/windows/startup.vbs</id><content type="html" xml:base="/windows/startup.vbs/"><![CDATA[<h3 id="vbs脚本">vbs脚本</h3>
<ul>
  <li>打开windows启动项文件夹：win+R, shell:startup</li>
  <li>
    <p>windows启动脚本：C:\Users\umas\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\startup.vbs</p>
  </li>
  <li>startup.vbs中启动wsl / 调用python
    <ul>
      <li>参数0表示后台运行
        <div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Set</span> <span class="n">ws</span><span class="o">=</span><span class="n">WScript</span><span class="p">.</span><span class="n">CreateObject</span><span class="p">(</span><span class="s">"WScript.Shell"</span><span class="p">)</span> 
<span class="c1">' ws.Run "wsl -d Ubuntu-20.04 -u root /bin/bash",0</span>
<span class="n">ws</span><span class="p">.</span><span class="n">Run</span> <span class="s">"wsl -u root /bin/bash"</span><span class="p">,</span><span class="mi">0</span>
<span class="n">ws</span><span class="p">.</span><span class="n">Run</span> <span class="s">"python.exe D:\s-linux\project\onebox\run_backend.py"</span><span class="p">,</span><span class="mi">0</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[vbs脚本 打开windows启动项文件夹：win+R, shell:startup windows启动脚本：C:\Users\umas\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\startup.vbs]]></summary></entry><entry><title type="html">vue: v-bind css</title><link href="/vue/v-bind_css/" rel="alternate" type="text/html" title="vue: v-bind css" /><published>2023-06-28T10:07:00+08:00</published><updated>2023-06-28T10:07:00+08:00</updated><id>/vue/v-bind_css</id><content type="html" xml:base="/vue/v-bind_css/"><![CDATA[<ul>
  <li>style中引用script变量：</li>
</ul>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nt">script</span> <span class="nt">setup</span><span class="o">&gt;</span>
<span class="nt">const</span> <span class="nt">theme</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="s2">"red"</span><span class="o">,</span>
<span class="p">};</span>
<span class="o">&lt;/</span><span class="nt">script</span><span class="o">&gt;</span>
    
<span class="o">&lt;</span><span class="nt">template</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">hello</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="nt">template</span><span class="o">&gt;</span>
    
<span class="o">&lt;</span><span class="nt">style</span> <span class="nt">scoped</span><span class="o">&gt;</span>
<span class="nt">p</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="nf">v-bind</span><span class="p">(</span><span class="s2">"theme.color"</span><span class="p">);</span>
<span class="p">}</span>
<span class="o">&lt;/</span><span class="nt">style</span><span class="o">&gt;</span>
</code></pre></div></div>

<ul>
  <li>加上”px”后缀，除了computed添加之外，还可以：</li>
</ul>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nt">style</span> <span class="nt">scoped</span><span class="o">&gt;</span>
<span class="nt">p</span> <span class="p">{</span>
 <span class="nl">font-size</span><span class="p">:</span> <span class="nf">calc</span><span class="p">(</span><span class="m">1px</span> <span class="o">*</span> <span class="nf">v-bind</span><span class="p">(</span><span class="n">size</span><span class="p">));</span>
<span class="p">}</span>
<span class="o">&lt;/</span><span class="nt">style</span><span class="o">&gt;</span>
</code></pre></div></div>

<ul>
  <li>也可以设置多个style组</li>
</ul>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nt">template</span><span class="o">&gt;</span>
 <span class="o">&lt;</span><span class="nt">p</span> <span class="nd">:class</span><span class="o">=</span><span class="s2">"classes1.red"</span><span class="o">&gt;</span><span class="nt">This</span> <span class="nt">should</span> <span class="nt">be</span> <span class="nt">red</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="nt">template</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="nt">style</span> <span class="nt">module</span><span class="o">=</span><span class="s2">"classes1"</span><span class="o">&gt;</span>
<span class="nc">.red</span> <span class="p">{</span>
 <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span>
<span class="p">}</span>
<span class="o">&lt;/</span><span class="nt">style</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="nt">style</span> <span class="nt">module</span><span class="o">=</span><span class="s2">"classes2"</span><span class="o">&gt;</span>
<span class="nc">.red</span> <span class="p">{</span>
 <span class="nl">color</span><span class="p">:</span> <span class="no">green</span><span class="p">;</span>
<span class="p">}</span>
<span class="o">&lt;/</span><span class="nt">style</span><span class="o">&gt;</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="vue" /><summary type="html"><![CDATA[style中引用script变量：]]></summary></entry><entry><title type="html">vue: store</title><link href="/vue/store/" rel="alternate" type="text/html" title="vue: store" /><published>2023-06-28T10:05:00+08:00</published><updated>2023-06-28T10:05:00+08:00</updated><id>/vue/store</id><content type="html" xml:base="/vue/store/"><![CDATA[<h3 id="sotreindexts">sotre/index.ts:</h3>
<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">store</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Vuex</span><span class="p">.</span><span class="nc">Store</span><span class="p">({</span>
  <span class="na">state</span><span class="p">:</span> <span class="p">{</span>
    <span class="c1">// 状态值</span>
    <span class="na">config</span><span class="p">:</span> <span class="p">{}</span> <span class="k">as</span> <span class="p">{</span> <span class="p">[</span><span class="na">key</span><span class="p">:</span> <span class="kr">string</span><span class="p">]:</span> <span class="kr">any</span> <span class="p">}</span>
  <span class="p">},</span>
  <span class="na">getters</span><span class="p">:</span> <span class="p">{</span>
    <span class="c1">// 获取状态的方法</span>
  <span class="p">},</span>
  <span class="na">mutations</span><span class="p">:</span> <span class="p">{</span>
    <span class="c1">// 修改状态的方法</span>
    <span class="nf">set_config</span><span class="p">(</span><span class="nx">state</span><span class="p">,</span> <span class="na">payload</span><span class="p">:</span> <span class="p">{</span> <span class="p">[</span><span class="na">key</span><span class="p">:</span> <span class="kr">string</span><span class="p">]:</span> <span class="kr">any</span> <span class="p">})</span> <span class="p">{</span>
      <span class="nx">state</span><span class="p">.</span><span class="nx">config</span><span class="p">[</span><span class="nx">payload</span><span class="p">.</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">payload</span><span class="p">.</span><span class="nx">value</span>
    <span class="p">},</span>
  <span class="p">},</span>
  <span class="na">actions</span><span class="p">:</span> <span class="p">{</span>
    <span class="c1">// 提交异步操作的方法</span>
  <span class="p">},</span>
  <span class="na">modules</span><span class="p">:</span> <span class="p">{</span>
    <span class="c1">// 模块</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></div></div>

<h3 id="vue中读取和修改">vue中读取和修改</h3>
<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">useStore</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vuex</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">store</span> <span class="o">=</span> <span class="nf">useStore</span><span class="p">();</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">store</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">config</span><span class="p">)</span>

<span class="nx">store</span><span class="p">.</span><span class="nf">commit</span><span class="p">(</span><span class="dl">"</span><span class="s2">set_config</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span> <span class="dl">"</span><span class="s2">key</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">111</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">value</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">222</span><span class="dl">"</span> <span class="p">})</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="vue" /><summary type="html"><![CDATA[sotre/index.ts: const store = new Vuex.Store({ state: { // 状态值 config: {} as { [key: string]: any } }, getters: { // 获取状态的方法 }, mutations: { // 修改状态的方法 set_config(state, payload: { [key: string]: any }) { state.config[payload.key] = payload.value }, }, actions: { // 提交异步操作的方法 }, modules: { // 模块 } })]]></summary></entry></feed>