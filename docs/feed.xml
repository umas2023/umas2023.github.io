<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-09-20T12:03:01+08:00</updated><id>/feed.xml</id><title type="html">umas’ awesome title</title><subtitle>umas&apos; awesome description for my new site here. It will appear in his document head meta (for Google search results) and in his feed.xml site description.</subtitle><entry><title type="html">knowhow: 设计模式</title><link href="/knowhow/knowhow_design_pattern/" rel="alternate" type="text/html" title="knowhow: 设计模式" /><published>2023-09-11T14:37:22+08:00</published><updated>2023-09-11T14:37:22+08:00</updated><id>/knowhow/knowhow_design_pattern</id><content type="html" xml:base="/knowhow/knowhow_design_pattern/"><![CDATA[<ul>
  <li>参考：
    <ul>
      <li>https://www.runoob.com/design-pattern/design-pattern-intro.html</li>
    </ul>
  </li>
</ul>

<h1 id="设计模式">设计模式</h1>

<h2 id="创建型模式">创建型模式</h2>
<p>这些设计模式提供了一种在创建对象的同时隐藏创建逻辑的方式，而不是使用 new 运算符直接实例化对象。这使得程序在判断针对某个给定实例需要创建哪些对象时更加灵活。</p>

<ul>
  <li>工厂模式（Factory Pattern）</li>
  <li>抽象工厂模式（Abstract Factory Pattern）</li>
  <li>单例模式（Singleton Pattern）</li>
  <li>建造者模式（Builder Pattern）</li>
  <li>原型模式（Prototype Pattern）</li>
</ul>

<h2 id="结构型模式">结构型模式</h2>
<p>这些模式关注对象之间的组合和关系，旨在解决如何构建灵活且可复用的类和对象结构。</p>

<ul>
  <li>适配器模式（Adapter Pattern）</li>
  <li>桥接模式（Bridge Pattern）</li>
  <li>过滤器模式（Filter、Criteria Pattern）</li>
  <li>组合模式（Composite Pattern）</li>
  <li>装饰器模式（Decorator Pattern）</li>
  <li>外观模式（Facade Pattern）</li>
  <li>享元模式（Flyweight Pattern）</li>
  <li>代理模式（Proxy Pattern）</li>
</ul>

<h2 id="行为型模式">行为型模式</h2>
<p>这些模式关注对象之间的通信和交互，旨在解决对象之间的责任分配和算法的封装。</p>

<ul>
  <li>责任链模式（Chain of Responsibility Pattern）</li>
  <li>命令模式（Command Pattern）</li>
  <li>解释器模式（Interpreter Pattern）</li>
  <li>迭代器模式（Iterator Pattern）</li>
  <li>中介者模式（Mediator Pattern）</li>
  <li>备忘录模式（Memento Pattern）</li>
  <li>观察者模式（Observer Pattern）</li>
  <li>状态模式（State Pattern）</li>
  <li>空对象模式（Null Object Pattern）</li>
  <li>策略模式（Strategy Pattern）</li>
  <li>模板模式（Template Pattern）</li>
  <li>访问者模式（Visitor Pattern）</li>
</ul>

<h2 id="j2ee-模式">J2EE 模式</h2>
<p>这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。</p>

<ul>
  <li>MVC 模式（MVC Pattern）</li>
  <li>业务代表模式（Business Delegate Pattern）</li>
  <li>组合实体模式（Composite Entity Pattern）</li>
  <li>数据访问对象模式（Data Access Object Pattern）</li>
  <li>前端控制器模式（Front Controller Pattern）</li>
  <li>拦截过滤器模式（Intercepting Filter Pattern）</li>
  <li>服务定位器模式（Service Locator Pattern）</li>
  <li>传输对象模式（Transfer Object Pattern）</li>
</ul>

<h1 id="设计模式6原则">设计模式6原则</h1>

<ol>
  <li>开闭原则（Open Close Principle）</li>
</ol>

<p>开闭原则的意思是：对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。简言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类，后面的具体设计中我们会提到这点。</p>

<ol>
  <li>里氏代换原则（Liskov Substitution Principle）</li>
</ol>

<p>里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p>

<ol>
  <li>依赖倒转原则（Dependence Inversion Principle）</li>
</ol>

<p>这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体。</p>

<ol>
  <li>接口隔离原则（Interface Segregation Principle）</li>
</ol>

<p>这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。</p>

<ol>
  <li>迪米特法则，又称最少知道原则（Demeter Principle）</li>
</ol>

<p>最少知道原则是指：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。</p>

<ol>
  <li>合成复用原则（Composite Reuse Principle）</li>
</ol>

<p>合成复用原则是指：尽量使用合成/聚合的方式，而不是使用继承。</p>

<!-- ![引入图片](/image/knowhow/2023-09-11-knowhow_design_pattern/image_1.jpg) -->

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="knowhow" /><summary type="html"><![CDATA[参考： https://www.runoob.com/design-pattern/design-pattern-intro.html]]></summary></entry><entry><title type="html">js: HTML DOM (文档对象模型)</title><link href="/js/js_dom/" rel="alternate" type="text/html" title="js: HTML DOM (文档对象模型)" /><published>2023-09-11T13:45:54+08:00</published><updated>2023-09-11T13:45:54+08:00</updated><id>/js/js_dom</id><content type="html" xml:base="/js/js_dom/"><![CDATA[<h2 id="查找html元素">查找HTML元素</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// NodeList 集合中的元素可以通过索引(以 0 为起始位置)来访问</span>

<span class="c1">// 通过id</span>
<span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">intro</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 通过类名</span>
<span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByClassName</span><span class="p">(</span><span class="dl">"</span><span class="s2">intro</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// 通过标签名</span>
<span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">"</span><span class="s2">p</span><span class="dl">"</span><span class="p">);</span>

</code></pre></div></div>

<h2 id="改变html内容">改变HTML内容</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">h1</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">header</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Old</span> <span class="nx">Header</span><span class="o">&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
	<span class="kd">var</span> <span class="nx">element</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">header</span><span class="dl">"</span><span class="p">);</span><span class="nx">element</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="dl">"</span><span class="s2">New Header</span><span class="dl">"</span><span class="p">;</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/body</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/html</span><span class="err">&gt;
</span></code></pre></div></div>

<ul>
  <li>结合点击事件</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">h1</span> <span class="nx">onclick</span><span class="o">=</span><span class="dl">"</span><span class="s2">this.innerHTML='Ooops!'</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">点击文本</span><span class="o">!&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/body</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/html</span><span class="err">&gt;
</span></code></pre></div></div>

<ul>
  <li>通过函数传递dom</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="kd">function</span> <span class="nf">changetext</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span>
<span class="p">{</span>
<span class="err">    </span><span class="nx">id</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="dl">"</span><span class="s2">Ooops!</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/head</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">h1</span> <span class="nx">onclick</span><span class="o">=</span><span class="dl">"</span><span class="s2">changetext(this)</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">点击文本</span><span class="o">!&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/body</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/html</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="改变html属性">改变HTML属性</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">img</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">image</span><span class="dl">"</span> <span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">smiley.gif</span><span class="dl">"</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">image</span><span class="dl">"</span><span class="p">).</span><span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">landscape.jpg</span><span class="dl">"</span><span class="p">;</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/body</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/html</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="改变html样式">改变HTML样式</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">charset</span><span class="o">=</span><span class="dl">"</span><span class="s2">utf-8</span><span class="dl">"</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">title</span><span class="o">&gt;</span><span class="nf">菜鸟教程</span><span class="p">(</span><span class="nx">runoob</span><span class="p">.</span><span class="nx">com</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/title</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/head</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
 
<span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p1</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">World</span><span class="o">!&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p2</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">World</span><span class="o">!&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">p2</span><span class="dl">"</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">;</span>
<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">p2</span><span class="dl">"</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">fontFamily</span><span class="o">=</span><span class="dl">"</span><span class="s2">Arial</span><span class="dl">"</span><span class="p">;</span>
<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">p2</span><span class="dl">"</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="dl">"</span><span class="s2">larger</span><span class="dl">"</span><span class="p">;</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span> 
<span class="o">&lt;</span><span class="sr">/body</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/html</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="事件">事件</h2>

<ul>
  <li>进入和离开页面时触发：onload/onunload</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">body</span> <span class="nx">onload</span><span class="o">=</span><span class="dl">"</span><span class="s2">checkCookies()</span><span class="dl">"</span><span class="o">&gt;</span>
</code></pre></div></div>

<ul>
  <li>改变时触发：onchange</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="dl">"</span><span class="s2">text</span><span class="dl">"</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">fname</span><span class="dl">"</span> <span class="nx">onchange</span><span class="o">=</span><span class="dl">"</span><span class="s2">upperCase()</span><span class="dl">"</span><span class="o">&gt;</span>
</code></pre></div></div>

<ul>
  <li>
    <p>鼠标悬停触发：onmouseover / onmouseout</p>
  </li>
  <li>
    <p>鼠标点击：onmousedown / onmouseup / onclick</p>
  </li>
  <li>
    <p>输入框获得焦点时触发：onfocus</p>
  </li>
  <li>
    <p>监听事件 - addEventListener</p>
  </li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 点击时触发监听事件</span>
<span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">myBtn</span><span class="dl">"</span><span class="p">).</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">click</span><span class="dl">"</span><span class="p">,</span> <span class="nx">displayDate</span><span class="p">);</span>

<span class="c1">// addEventListener() 方法允许向同一个元素添加多个事件，且不会覆盖已存在的事件</span>

<span class="c1">// 一些常用的触发场景</span>
<span class="nx">element</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">mouseover</span><span class="dl">"</span><span class="p">,</span> <span class="nx">myFunction</span><span class="p">);</span>
<span class="nx">element</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">click</span><span class="dl">"</span><span class="p">,</span> <span class="nx">mySecondFunction</span><span class="p">);</span>
<span class="nx">element</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">mouseout</span><span class="dl">"</span><span class="p">,</span> <span class="nx">myThirdFunction</span><span class="p">);</span>

<span class="c1">// windows对象：窗口大小重置</span>
<span class="nb">window</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">resize</span><span class="dl">"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
<span class="err">    </span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">demo</span><span class="dl">"</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">sometext</span><span class="p">;</span>
	<span class="p">});</span>

<span class="c1">// 移除监听事件</span>
<span class="nx">element</span><span class="p">.</span><span class="nf">removeEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">mousemove</span><span class="dl">"</span><span class="p">,</span> <span class="nx">myFunction</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="创建节点">创建节点</h2>

<ul>
  <li>添加新元素到尾部：appendChild</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">div1</span><span class="dl">"</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p1</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">这是一个段落</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p2</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">这是另外一个段落</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span> 
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="kd">var</span> <span class="nx">para</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createElement</span><span class="p">(</span><span class="dl">"</span><span class="s2">p</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">node</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createTextNode</span><span class="p">(</span><span class="dl">"</span><span class="s2">这是一个新的段落。</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">para</span><span class="p">.</span><span class="nf">appendChild</span><span class="p">(</span><span class="nx">node</span><span class="p">);</span>
 
<span class="kd">var</span> <span class="nx">element</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">div1</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">element</span><span class="p">.</span><span class="nf">appendChild</span><span class="p">(</span><span class="nx">para</span><span class="p">);</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<ul>
  <li>添加到头部：insertBefore</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">div1</span><span class="dl">"</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p1</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">这是一个段落</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p2</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">这是另外一个段落</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span> 
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="kd">var</span> <span class="nx">para</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createElement</span><span class="p">(</span><span class="dl">"</span><span class="s2">p</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">node</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createTextNode</span><span class="p">(</span><span class="dl">"</span><span class="s2">这是一个新的段落。</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">para</span><span class="p">.</span><span class="nf">appendChild</span><span class="p">(</span><span class="nx">node</span><span class="p">);</span>
 
<span class="kd">var</span> <span class="nx">element</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">div1</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">child</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">p1</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">element</span><span class="p">.</span><span class="nf">insertBefore</span><span class="p">(</span><span class="nx">para</span><span class="p">,</span> <span class="nx">child</span><span class="p">);</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="移除元素">移除元素</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">div1</span><span class="dl">"</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p1</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">这是一个段落</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p2</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">这是另外一个段落</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span> 
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="kd">var</span> <span class="nx">parent</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">div1</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">child</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">p1</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">parent</span><span class="p">.</span><span class="nf">removeChild</span><span class="p">(</span><span class="nx">child</span><span class="p">);</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="替换元素">替换元素</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">div1</span><span class="dl">"</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p1</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">这是一个段落</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">p</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">p2</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">这是另外一个段落</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span> 
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="kd">var</span> <span class="nx">para</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createElement</span><span class="p">(</span><span class="dl">"</span><span class="s2">p</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">node</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createTextNode</span><span class="p">(</span><span class="dl">"</span><span class="s2">这是一个新的段落。</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">para</span><span class="p">.</span><span class="nf">appendChild</span><span class="p">(</span><span class="nx">node</span><span class="p">);</span>
 
<span class="kd">var</span> <span class="nx">parent</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">div1</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">child</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">p1</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">parent</span><span class="p">.</span><span class="nf">replaceChild</span><span class="p">(</span><span class="nx">para</span><span class="p">,</span> <span class="nx">child</span><span class="p">);</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<!-- ![引入图片](/image/js/2023-09-11-js_dom/image_1.jpg) -->

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="js" /><summary type="html"><![CDATA[查找HTML元素]]></summary></entry><entry><title type="html">js: js对象</title><link href="/js/js_object/" rel="alternate" type="text/html" title="js: js对象" /><published>2023-09-11T13:31:08+08:00</published><updated>2023-09-11T13:31:08+08:00</updated><id>/js/js_object</id><content type="html" xml:base="/js/js_object/"><![CDATA[<ul>
  <li>
    <p>一种数据类型，带有属性和方法</p>
  </li>
  <li>
    <p>创建新对象有两种不同的方法：</p>

    <ul>
      <li>使用 Object 定义并创建对象的实例。</li>
      <li>使用函数来定义对象，然后创建新的对象实例。</li>
    </ul>
  </li>
  <li>
    <p>Object 构造函数，会根据给定的参数创建对象，具体有以下情况：</p>

    <ul>
      <li>如果给定值是 null 或 undefined，将会创建并返回一个空对象。</li>
      <li>如果传进去的是一个基本类型的值，则会构造其包装类型的对象。</li>
      <li>如果传进去的是引用类型的值，仍然会返回这个值，经他们复制的变量保有和源对象相同的引用地址。</li>
    </ul>
  </li>
  <li>
    <p>示例</p>
  </li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 等价于 o = new Boolean(true);</span>
<span class="kd">var</span> <span class="nx">o</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Object</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">person</span><span class="o">=</span><span class="k">new</span> <span class="nc">Object</span><span class="p">();</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">firstname</span><span class="o">=</span><span class="dl">"</span><span class="s2">John</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">lastname</span><span class="o">=</span><span class="dl">"</span><span class="s2">Doe</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">age</span><span class="o">=</span><span class="mi">50</span><span class="p">;</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">eyecolor</span><span class="o">=</span><span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">;</span>
<span class="c1">// 等价于：</span>
<span class="nx">person</span><span class="o">=</span><span class="p">{</span><span class="na">firstname</span><span class="p">:</span><span class="dl">"</span><span class="s2">John</span><span class="dl">"</span><span class="p">,</span><span class="na">lastname</span><span class="p">:</span><span class="dl">"</span><span class="s2">Doe</span><span class="dl">"</span><span class="p">,</span><span class="na">age</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="na">eyecolor</span><span class="p">:</span><span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">};</span>
</code></pre></div></div>

<ul>
  <li>使用函数（对象构造器constructor）的例子</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">person</span><span class="p">(</span><span class="nx">firstname</span><span class="p">,</span><span class="nx">lastname</span><span class="p">,</span><span class="nx">age</span><span class="p">,</span><span class="nx">eyecolor</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">firstname</span><span class="o">=</span><span class="nx">firstname</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">lastname</span><span class="o">=</span><span class="nx">lastname</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="o">=</span><span class="nx">age</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">eyecolor</span><span class="o">=</span><span class="nx">eyecolor</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// 在JavaScript中，this通常指向的是我们正在执行的函数本身，或者是指向该函数所属的对象（运行时）</span>

<span class="c1">// 创建新实例</span>
<span class="kd">var</span> <span class="nx">myFather</span><span class="o">=</span><span class="k">new</span> <span class="nf">person</span><span class="p">(</span><span class="dl">"</span><span class="s2">John</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Doe</span><span class="dl">"</span><span class="p">,</span><span class="mi">50</span><span class="p">,</span><span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">myMother</span><span class="o">=</span><span class="k">new</span> <span class="nf">person</span><span class="p">(</span><span class="dl">"</span><span class="s2">Sally</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Rally</span><span class="dl">"</span><span class="p">,</span><span class="mi">48</span><span class="p">,</span><span class="dl">"</span><span class="s2">green</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">// 添加属性</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">firstname</span><span class="o">=</span><span class="dl">"</span><span class="s2">John</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">lastname</span><span class="o">=</span><span class="dl">"</span><span class="s2">Doe</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">age</span><span class="o">=</span><span class="mi">30</span><span class="p">;</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">eyecolor</span><span class="o">=</span><span class="dl">"</span><span class="s2">blue</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">x</span><span class="o">=</span><span class="nx">person</span><span class="p">.</span><span class="nx">firstname</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li>为对象添加方法</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">person</span><span class="p">(</span><span class="nx">firstname</span><span class="p">,</span><span class="nx">lastname</span><span class="p">,</span><span class="nx">age</span><span class="p">,</span><span class="nx">eyecolor</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">firstname</span><span class="o">=</span><span class="nx">firstname</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">lastname</span><span class="o">=</span><span class="nx">lastname</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">age</span><span class="o">=</span><span class="nx">age</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">eyecolor</span><span class="o">=</span><span class="nx">eyecolor</span><span class="p">;</span>

    <span class="k">this</span><span class="p">.</span><span class="nx">changeName</span><span class="o">=</span><span class="nx">changeName</span><span class="p">;</span>
    <span class="kd">function</span> <span class="nf">changeName</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">lastname</span><span class="o">=</span><span class="nx">name</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<ul>
  <li>
    <p>JavaScript for…in 语句循环遍历对象的属性。</p>
  </li>
  <li>
    <p>一个已存在的构造器对象中不能添加新的属性，只能在构造器函数中添加</p>
  </li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 报错</span>
<span class="nx">Person</span><span class="p">.</span><span class="nx">nationality</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">English</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<ul>
  <li>所有的 JavaScript 对象都会从一个 prototype（原型对象）中继承属性和方法，使用 prototype 属性就可以给对象的构造函数添加新的属性</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">Person</span><span class="p">(</span><span class="nx">first</span><span class="p">,</span> <span class="nx">last</span><span class="p">,</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">eyecolor</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">first</span><span class="p">;</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">last</span><span class="p">;</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span><span class="p">;</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">eyeColor</span> <span class="o">=</span> <span class="nx">eyecolor</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="nx">Person</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">nationality</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">English</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">Person</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> </span><span class="dl">"</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<ul>
  <li>补充，判断一个实例是否属于某种类型</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">person</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
<span class="p">}</span>
<span class="kd">let</span> <span class="nx">no</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">person</span><span class="p">()</span>
<span class="nx">no</span> <span class="k">instanceof</span> <span class="nx">person</span><span class="c1">//true</span>
</code></pre></div></div>

<!-- ![引入图片](/image/js/2023-09-11-js_object/image_1.jpg) -->

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="js" /><summary type="html"><![CDATA[一种数据类型，带有属性和方法]]></summary></entry><entry><title type="html">windows: 查看wifi密码</title><link href="/windows/wifi_passwd/" rel="alternate" type="text/html" title="windows: 查看wifi密码" /><published>2023-09-09T14:20:16+08:00</published><updated>2023-09-09T14:20:16+08:00</updated><id>/windows/wifi_passwd</id><content type="html" xml:base="/windows/wifi_passwd/"><![CDATA[<p><img src="/image/windows/2023-09-09-wifi_passwd/image_1.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-wifi_passwd/image_2.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-wifi_passwd/image_3.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-wifi_passwd/image_4.png" alt="引入图片" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">windows: 局域网共享文件夹</title><link href="/windows/share_dir/" rel="alternate" type="text/html" title="windows: 局域网共享文件夹" /><published>2023-09-09T14:15:13+08:00</published><updated>2023-09-09T14:15:13+08:00</updated><id>/windows/share_dir</id><content type="html" xml:base="/windows/share_dir/"><![CDATA[<ul>
  <li>设置 =&gt; 网络 =&gt; 网络共享中心 =&gt; 高级共享设置，全部启用</li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_1.png" alt="引入图片" /></p>

<ul>
  <li>控制面板 =&gt; 程序和功能 =&gt; 启用或关闭windows功能 =&gt; smb文件共享</li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_2.png" alt="引入图片" /></p>

<ul>
  <li>关于用户名和密码
    <ul>
      <li>首先在c盘users文件夹确定当前用户名</li>
    </ul>
  </li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_3.png" alt="引入图片" /></p>

<ul>
  <li>使用这个名字添加用户</li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_4.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>手机访问时直接用outlook邮箱账号密码</p>
  </li>
  <li>电脑连接树莓派的smb</li>
  <li>此电脑右键，映射网络驱动器</li>
</ul>

<p><img src="/image/windows/2023-09-09-share_dir/image_5.png" alt="引入图片" /></p>

<ul>
  <li>关于如何在树莓派开启smb，好像记在树莓派分区里了</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[设置 =&gt; 网络 =&gt; 网络共享中心 =&gt; 高级共享设置，全部启用]]></summary></entry><entry><title type="html">windows: hyperv虚拟机软路由</title><link href="/windows/hyperv_openwrt/" rel="alternate" type="text/html" title="windows: hyperv虚拟机软路由" /><published>2023-09-09T11:57:03+08:00</published><updated>2023-09-09T11:57:03+08:00</updated><id>/windows/hyperv_openwrt</id><content type="html" xml:base="/windows/hyperv_openwrt/"><![CDATA[<h2 id="下载镜像">下载镜像</h2>

<ul>
  <li>下载openwrt镜像
    <ul>
      <li>https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/</li>
    </ul>
  </li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_1.png" alt="引入图片" /></p>

<ul>
  <li>combined：文件系统 + 内核</li>
  <li>
    <p>rootfs： 只有文件系统</p>
  </li>
  <li>
    <p>注意下载之后的压缩包用7z解压可能报错，可以用winrar</p>
  </li>
  <li>starwind软件将img转为vmdk
    <ul>
      <li>选localfile，VHD/VHDX，VHDX growable image</li>
    </ul>
  </li>
</ul>

<h2 id="启动虚拟机">启动虚拟机</h2>

<ul>
  <li>确认hyperv已经打开</li>
  <li>windows管理工具-&gt;hyper-v管理器</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_2.png" alt="引入图片" /></p>

<ul>
  <li>外部网络选择当前使用的网卡</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_3.png" alt="引入图片" /></p>

<ul>
  <li>创建虚拟机</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_4.png" alt="引入图片" /></p>

<ul>
  <li>第二代，不使用动态内存，连接选刚才的wrt_lan，使用现有虚拟硬盘找到刚才的vhdx</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_5.png" alt="引入图片" /></p>

<ul>
  <li>安全 -&gt; 启用安全启动 - 关掉</li>
  <li>网络适配器 -&gt; 高级功能 -&gt; 启用mac地址欺骗</li>
  <li>检查点 -&gt; 使用自动检查点 - 关掉</li>
  <li>
    <p>自动启动 -&gt; 有需要的话开启始终自动启动</p>
  </li>
  <li>右键连接openwrt，编辑</li>
  <li>Vim etc/config/network</li>
  <li>改成和当前路由器相同网段</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_6.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>reboot</p>
  </li>
  <li>浏览器输入上面的ip：192.168.31.31</li>
  <li>没有密码</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_7.png" alt="引入图片" /></p>

<ul>
  <li>修改lan，网关指向主路由</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_8.png" alt="引入图片" /></p>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_9.png" alt="引入图片" /></p>

<ul>
  <li>DHCP服务器：忽略此接口</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_10.png" alt="引入图片" /></p>

<ul>
  <li>禁用桥接</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_11.png" alt="引入图片" /></p>

<ul>
  <li>Dns 8.8.8.8</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_12.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>ping downloads.openwrt.org</p>
  </li>
  <li>安装中文语言包</li>
  <li>Index of /releases/22.03.5/packages/x86_64/luci/ (openwrt.org)</li>
  <li>搜base-zh-cn</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_13.png" alt="引入图片" /></p>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_14.png" alt="引入图片" /></p>

<ul>
  <li>更换阿里源</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_15.png" alt="引入图片" /></p>

<ul>
  <li>将 /etc/opkg/distfeeds.conf 下的 downloads.openwrt.org 替换为mirrors.aliyun.com/openwrt</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>src/gz openwrt_core https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/packages
src/gz openwrt_base https://downloads.openwrt.org/releases/22.03.5/packages/x86_64/base
src/gz openwrt_luci https://downloads.openwrt.org/releases/22.03.5/packages/x86_64/luci
src/gz openwrt_packages https://downloads.openwrt.org/releases/22.03.5/packages/x86_64/packages
src/gz openwrt_routing https://do
</code></pre></div></div>

<ul>
  <li>
    <p>完了update一下：<code class="language-plaintext highlighter-rouge">opkg update</code></p>
  </li>
  <li>
    <p>注意第一行的targets不要改，会报错（2023.5.28）</p>
  </li>
</ul>

<h2 id="安装clash">安装clash</h2>

<ul>
  <li>
    <p>参考：https://github.com/vernesong/OpenClash/wiki/%E5%AE%89%E8%A3%85</p>
  </li>
  <li>
    <p>首先删掉dnsmasq</p>
  </li>
  <li>下载ipk</li>
  <li>Releases · vernesong/OpenClash (github.com)</li>
  <li>安装依赖</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg update
opkg install coreutils-nohup --force-overwrite
opkg install bash --force-overwrite
opkg install iptables --force-overwrite
opkg install dnsmasq-full --force-overwrite
opkg install curl --force-overwrite
opkg install ca-certificates --force-overwrite
opkg install ipset --force-overwrite
opkg install i
</code></pre></div></div>

<ul>
  <li>整合↑</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg install coreutils-nohup  bash  iptables  dnsmasq-full  curl  ca-certificates  ipset  ip-full  iptables-mod-tproxy  iptables-mod-extra  libcap  libcap-bin  ruby  ruby-yaml  kmod-tun --force-overwrite 

</code></pre></div></div>

<ul>
  <li>ipk文件拷贝到远程主机
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scp .\luci-app-openclash_0.45.121-beta_all.ipk root@192.168.31.31:/root
</code></pre></div>    </div>
  </li>
  <li>opkg install
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg install luci-app-openclash_0.45.121-beta_all.ipk
</code></pre></div>    </div>
  </li>
  <li>报错 module ‘luci.cbi.datatypes’ not found
    <ul>
      <li>参考：https://github.com/vernesong/OpenClash/issues/2364</li>
      <li>参考：https://blog.csdn.net/xs18952904/article/details/124600025</li>
    </ul>
  </li>
  <li>命令报错找不到：opkg install luci-compat，需要手动下载
    <ul>
      <li>https://downloads.openwrt.org/releases/22.03.5/packages/x86_64/luci/</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scp .\luci-compat_git-23.093.42303-ef4cd04_all.ipk root@192.168.31.31:/root
opkg install luci-compat_git-23.093.42303-ef4cd04_all.ipk
</code></pre></div></div>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_16.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>这里没有手动下载内核，如果配置完成后内核自动下载失败，需要手动下载</p>
  </li>
  <li>
    <p>不行，它不能自动下载，还是要手动下</p>
  </li>
  <li>
    <p>下载内核，三个不存在的都下载</p>
    <ul>
      <li>md好麻烦，还是安一个winscp吧</li>
    </ul>
  </li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_17.png" alt="引入图片" /></p>

<ul>
  <li>拷过去之后加权限</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_18.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-hyperv_openwrt/image_19.png" alt="引入图片" /></p>

<ul>
  <li>启用fake-ip模式（在底部点击）记得点保存应用</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_20.png" alt="引入图片" /></p>

<ul>
  <li>启动之后在 server logs 报错</li>
  <li>警告：OpenClash 启动成功，检测到您启用了IPv6的DHCP服务，可能会造成连接异常！</li>
  <li>接口编辑里关掉这个：</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_21.png" alt="引入图片" /></p>

<ul>
  <li>安装主题</li>
  <li><a href="https://github.com/jerrykuku/luci-theme-argon/blob/master/README_ZH.md">luci-theme-argon/README_ZH.md at master · jerrykuku/luci-theme-argon · GitHub</a></li>
  <li>可以用wget
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg install luci-compat
opkg install luci-lib-ipkg
wget --no-check-certificate https://github.com/jerrykuku/luci-theme-argon/releases/download/v2.3/luci-theme-argon_2.3_all.ipk
opkg install luci-theme-argon*.ipk
</code></pre></div>    </div>
  </li>
  <li>报错找不到的话update一下
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>opkg update
</code></pre></div>    </div>
  </li>
  <li>也可以直接下载：</li>
  <li>https://github.com/jerrykuku/</li>
</ul>

<h2 id="windows连接">windows连接</h2>

<ul>
  <li>修改默认网关</li>
  <li>不需要在路由器里固定ip地址</li>
  <li>设置的网卡必须是之前open wrt连接的网卡，双网卡要选对，第三方手机不能连接</li>
  <li>首选dns是wrt地址
注意连接后需要等待2-3分钟，期间会无法联网</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_22.png" alt="引入图片" />
<img src="/image/windows/2023-09-09-hyperv_openwrt/image_23.png" alt="引入图片" /></p>

<ul>
  <li>经测试下面这个方法不太行</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_24.png" alt="引入图片" /></p>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_25.png" alt="引入图片" /></p>

<ul>
  <li>1、网络前缀长度24，对应子网掩码【255.255.255.0】；</li>
  <li>2、网络前缀长度18，对应子网掩码【255.255.240.0】；</li>
  <li>3、网络前缀长度16，对应子网掩码【255.255.0.0】</li>
</ul>

<h2 id="热点转发">热点转发</h2>

<ul>
  <li>实际测试时发现只有电脑本机可以正常上网，安卓苹果switch都不行</li>
  <li>可以将电脑的网络通过热点转发给其他设备</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_26.png" alt="引入图片" /></p>

<ul>
  <li>打开共享后可以看到多出一个网络设备</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_27.png" alt="引入图片" /></p>

<ul>
  <li>在当前电脑连接wifi的设备属性里打开共享，没有开启共享时手机连上会显示没有网络</li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_28.png" alt="引入图片" /></p>

<ul>
  <li>
    <p>补充一点，如果手机长时间连接不上的话，把上面的勾去掉试试</p>
  </li>
  <li>
    <p>如果电脑连接后可以正常上网翻墙，但右下角显示无internet，这时无法开启热点，可以尝试：</p>
    <ul>
      <li>更换节点</li>
      <li>或者关闭ipv4校验，关闭后重新启动clash并重新连接，</li>
    </ul>
  </li>
</ul>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_29.png" alt="引入图片" /></p>

<p><img src="/image/windows/2023-09-09-hyperv_openwrt/image_30.png" alt="引入图片" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>

<h2 id="后记">后记</h2>

<ul>
  <li>由于虚拟机性能限制，switch连接后nat无法满足联机需要</li>
  <li>加钱买了个小米路由器，刷机教程详见另一篇</li>
</ul>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[下载镜像]]></summary></entry><entry><title type="html">windows: 删除文件被占用</title><link href="/windows/delete_in_use/" rel="alternate" type="text/html" title="windows: 删除文件被占用" /><published>2023-09-09T11:49:35+08:00</published><updated>2023-09-09T11:49:35+08:00</updated><id>/windows/delete_in_use</id><content type="html" xml:base="/windows/delete_in_use/"><![CDATA[<ul>
  <li>任务管理器 -&gt; 性能 -&gt; 打开资源监视器 -&gt; cpu -&gt; 搜索句柄</li>
</ul>

<p><img src="/image/windows/2023-09-09-delete_in_use/image_1.jpg" alt="引入图片" /></p>

<ul>
  <li>右键结束进程</li>
  <li>亲测可以解决 ERR_ELECTRON_BUILDER_CANNOT_EXECUTE 问题</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="windows" /><summary type="html"><![CDATA[任务管理器 -&gt; 性能 -&gt; 打开资源监视器 -&gt; cpu -&gt; 搜索句柄]]></summary></entry><entry><title type="html">vue: ts环境下导入public目录下的json</title><link href="/vue/import_json/" rel="alternate" type="text/html" title="vue: ts环境下导入public目录下的json" /><published>2023-09-08T19:50:10+08:00</published><updated>2023-09-08T19:50:10+08:00</updated><id>/vue/import_json</id><content type="html" xml:base="/vue/import_json/"><![CDATA[<ul>
  <li>一般在assets或者utils目录下导入json时可以直接用@定义路径，在tsconfig.json中添加<code class="language-plaintext highlighter-rouge">"resolveJsonModule": true,</code>即可</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">assets_json</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@/utils/assets_conf.json</span><span class="dl">"</span>
</code></pre></div></div>

<ul>
  <li>如果json在public路径下，直接导入会报错</li>
  <li>在项目根目录（或者如果已经定义了utils.d.ts的话在utils目录也可以）下新建.d.ts，比如assets_conf.d.ts，写入以下内容</li>
</ul>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">declare</span> <span class="kr">module</span> <span class="dl">"</span><span class="s2">*.json</span><span class="dl">"</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">value</span><span class="p">:</span> <span class="kr">any</span><span class="p">;</span>
    <span class="k">export</span> <span class="k">default</span> <span class="nx">value</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>这时再导入就不会报错了</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">assets_json</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">/public/config/assets_conf.json</span><span class="dl">"</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="vue" /><summary type="html"><![CDATA[一般在assets或者utils目录下导入json时可以直接用@定义路径，在tsconfig.json中添加"resolveJsonModule": true,即可]]></summary></entry><entry><title type="html">termux: hello world</title><link href="/linux/termux-hello/" rel="alternate" type="text/html" title="termux: hello world" /><published>2023-09-08T10:16:49+08:00</published><updated>2023-09-08T10:16:49+08:00</updated><id>/linux/termux-hello</id><content type="html" xml:base="/linux/termux-hello/"><![CDATA[<h2 id="基本命令">基本命令</h2>

<ul>
  <li>termux-change-repo
    <ul>
      <li>换源，空格键选中</li>
    </ul>
  </li>
  <li>termux-setup-storage
    <ul>
      <li>创建storage文件夹，直接访问手机文件</li>
    </ul>
  </li>
  <li>pkg install vim
    <ul>
      <li>有时候apt可能不好用，改为pkg</li>
    </ul>
  </li>
  <li>ssh远程
    <ul>
      <li>实测termux里面的ubuntu的ssh服务启不起来，只能先ssh进termux再进ubuntu</li>
      <li>更新：termux和ubuntu共用8022端口，不能同时开ssh，把termux的ssh关了就可以开ubuntu的ssh了</li>
      <li>pkg install openssh</li>
      <li>看我是谁：whoami</li>
      <li>设置密码：passwd</li>
      <li>启动服务：sshd</li>
      <li>电脑连接端口是8022：ssh u0_a153@192.168.1.109 -p 8022</li>
      <li>mate10用户名u0_a243</li>
      <li>nova9用户名u0_a282</li>
      <li>matepad用户名u0_a153</li>
      <li>记得把vpn都退了不然一直timeout，md查了好久居然是因为这个</li>
    </ul>
  </li>
  <li>termux调用摄像头，参考：https://zhuanlan.zhihu.com/p/381044910</li>
</ul>

<h2 id="安装ubuntu">安装ubuntu</h2>

<ul>
  <li>安装ubuntu
    <ul>
      <li>安装工具：pkg install proot-distro</li>
      <li>记得先pkg update一下</li>
      <li>查看可安装版本：proot-distro list</li>
      <li>安装：proot-distro install ubuntu</li>
      <li>登录：proot-distro login ubuntu</li>
      <li>文件：termux启用storage之后，Ubuntu中 /sdcard 目录即为手机存储</li>
    </ul>
  </li>
  <li>termux设置默认进入ubuntu：
    <ul>
      <li>新建.profile</li>
      <li>加入登录命令</li>
    </ul>
  </li>
  <li>
    <p>手机文件在/sdcard目录下</p>
  </li>
  <li>安装code－server
    <ul>
      <li>
        <table>
          <tbody>
            <tr>
              <td>curl -fsSL https://code-server.dev/install.sh</td>
              <td>sh</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li>挂梯子↑</li>
      <li>code-server</li>
      <li>cat .config/code-server/config.yaml</li>
      <li>把密码记住</li>
      <li>fe2bee81b0fa36545baec7ad</li>
      <li>浏览器访问127.0.0.1:8080</li>
      <li>输完密码黑屏/白屏换个浏览器，安卓edge可行chrome不行</li>
      <li>密码替换：sed -i “/^passwd=*/cpasswd=666” config.yaml</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code></code></pre></div></div>]]></content><author><name></name></author><category term="linux" /><summary type="html"><![CDATA[基本命令]]></summary></entry><entry><title type="html">raspberry_pi: 树莓派命令行联网</title><link href="/raspberry_pi/linux/server_net/" rel="alternate" type="text/html" title="raspberry_pi: 树莓派命令行联网" /><published>2023-09-08T09:33:00+08:00</published><updated>2023-09-08T09:33:00+08:00</updated><id>/raspberry_pi/linux/server_net</id><content type="html" xml:base="/raspberry_pi/linux/server_net/"><![CDATA[<ul>
  <li>参考
    <ul>
      <li>https://ubuntu.com/tutorials/how-to-install-ubuntu-on-your-raspberry-pi#4-boot-ubuntu-server</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="raspberry_pi" /><category term="linux" /><summary type="html"><![CDATA[参考 https://ubuntu.com/tutorials/how-to-install-ubuntu-on-your-raspberry-pi#4-boot-ubuntu-server]]></summary></entry></feed>